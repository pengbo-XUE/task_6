### YamlMime:ManagedReference
items:
- uid: assignment_2_task_6.ApplicationUserManager
  commentId: T:assignment_2_task_6.ApplicationUserManager
  id: ApplicationUserManager
  parent: assignment_2_task_6
  children:
  - assignment_2_task_6.ApplicationUserManager.#ctor(Microsoft.AspNet.Identity.IUserStore{assignment_2_task_6.Models.ApplicationUser})
  - assignment_2_task_6.ApplicationUserManager.Create(Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions{assignment_2_task_6.ApplicationUserManager},Microsoft.Owin.IOwinContext)
  langs:
  - csharp
  - vb
  name: ApplicationUserManager
  nameWithType: ApplicationUserManager
  fullName: assignment_2_task_6.ApplicationUserManager
  type: Class
  source:
    id: ApplicationUserManager
    path: E:\Class\Cloud computing\assignment 2 my work\assignment 2 task 6\assignment 2 task 6\assignment 2 task 6\App_Start\IdentityConfig.cs
    startLine: 35
  assemblies:
  - assignment 2 task 6
  namespace: assignment_2_task_6
  syntax:
    content: 'public class ApplicationUserManager : UserManager<ApplicationUser>, IDisposable'
    content.vb: >-
      Public Class ApplicationUserManager
          Inherits UserManager(Of ApplicationUser)
          Implements IDisposable
  inheritance:
  - System.Object
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser}
  implements:
  - System.IDisposable
  inheritedMembers:
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.Dispose
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.CreateIdentityAsync(assignment_2_task_6.Models.ApplicationUser,System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.CreateAsync(assignment_2_task_6.Models.ApplicationUser)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.UpdateAsync(assignment_2_task_6.Models.ApplicationUser)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.DeleteAsync(assignment_2_task_6.Models.ApplicationUser)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.FindByIdAsync(System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.FindByNameAsync(System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.CreateAsync(assignment_2_task_6.Models.ApplicationUser,System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.FindAsync(System.String,System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.CheckPasswordAsync(assignment_2_task_6.Models.ApplicationUser,System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.HasPasswordAsync(System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.AddPasswordAsync(System.String,System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.ChangePasswordAsync(System.String,System.String,System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.RemovePasswordAsync(System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.UpdatePassword(Microsoft.AspNet.Identity.IUserPasswordStore{assignment_2_task_6.Models.ApplicationUser,System.String},assignment_2_task_6.Models.ApplicationUser,System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.VerifyPasswordAsync(Microsoft.AspNet.Identity.IUserPasswordStore{assignment_2_task_6.Models.ApplicationUser,System.String},assignment_2_task_6.Models.ApplicationUser,System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GetSecurityStampAsync(System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.UpdateSecurityStampAsync(System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GeneratePasswordResetTokenAsync(System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.ResetPasswordAsync(System.String,System.String,System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.RemoveLoginAsync(System.String,Microsoft.AspNet.Identity.UserLoginInfo)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.AddLoginAsync(System.String,Microsoft.AspNet.Identity.UserLoginInfo)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GetLoginsAsync(System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.AddClaimAsync(System.String,System.Security.Claims.Claim)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.RemoveClaimAsync(System.String,System.Security.Claims.Claim)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GetClaimsAsync(System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.AddToRoleAsync(System.String,System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.AddToRolesAsync(System.String,System.String[])
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.RemoveFromRolesAsync(System.String,System.String[])
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.RemoveFromRoleAsync(System.String,System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GetRolesAsync(System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.IsInRoleAsync(System.String,System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GetEmailAsync(System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SetEmailAsync(System.String,System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.FindByEmailAsync(System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GenerateEmailConfirmationTokenAsync(System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.ConfirmEmailAsync(System.String,System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.IsEmailConfirmedAsync(System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GetPhoneNumberAsync(System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SetPhoneNumberAsync(System.String,System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.ChangePhoneNumberAsync(System.String,System.String,System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.IsPhoneNumberConfirmedAsync(System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GenerateChangePhoneNumberTokenAsync(System.String,System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.VerifyChangePhoneNumberTokenAsync(System.String,System.String,System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.VerifyUserTokenAsync(System.String,System.String,System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GenerateUserTokenAsync(System.String,System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.RegisterTwoFactorProvider(System.String,Microsoft.AspNet.Identity.IUserTokenProvider{assignment_2_task_6.Models.ApplicationUser,System.String})
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GetValidTwoFactorProvidersAsync(System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.VerifyTwoFactorTokenAsync(System.String,System.String,System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GenerateTwoFactorTokenAsync(System.String,System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.NotifyTwoFactorTokenAsync(System.String,System.String,System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GetTwoFactorEnabledAsync(System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SetTwoFactorEnabledAsync(System.String,System.Boolean)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SendEmailAsync(System.String,System.String,System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SendSmsAsync(System.String,System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.IsLockedOutAsync(System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SetLockoutEnabledAsync(System.String,System.Boolean)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GetLockoutEnabledAsync(System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GetLockoutEndDateAsync(System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SetLockoutEndDateAsync(System.String,System.DateTimeOffset)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.AccessFailedAsync(System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.ResetAccessFailedCountAsync(System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GetAccessFailedCountAsync(System.String)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.Dispose(System.Boolean)
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.Store
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.PasswordHasher
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.UserValidator
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.PasswordValidator
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.ClaimsIdentityFactory
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.EmailService
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SmsService
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.UserTokenProvider
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.UserLockoutEnabledByDefault
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.MaxFailedAccessAttemptsBeforeLockout
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.DefaultAccountLockoutTimeSpan
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SupportsUserTwoFactor
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SupportsUserPassword
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SupportsUserSecurityStamp
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SupportsUserRole
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SupportsUserLogin
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SupportsUserEmail
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SupportsUserPhoneNumber
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SupportsUserClaim
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SupportsUserLockout
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SupportsQueryableUsers
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.Users
  - Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.TwoFactorProviders
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: assignment_2_task_6.ApplicationUserManager.#ctor(Microsoft.AspNet.Identity.IUserStore{assignment_2_task_6.Models.ApplicationUser})
  commentId: M:assignment_2_task_6.ApplicationUserManager.#ctor(Microsoft.AspNet.Identity.IUserStore{assignment_2_task_6.Models.ApplicationUser})
  id: '#ctor(Microsoft.AspNet.Identity.IUserStore{assignment_2_task_6.Models.ApplicationUser})'
  parent: assignment_2_task_6.ApplicationUserManager
  langs:
  - csharp
  - vb
  name: ApplicationUserManager(IUserStore<ApplicationUser>)
  nameWithType: ApplicationUserManager.ApplicationUserManager(IUserStore<ApplicationUser>)
  fullName: assignment_2_task_6.ApplicationUserManager.ApplicationUserManager(Microsoft.AspNet.Identity.IUserStore<assignment_2_task_6.Models.ApplicationUser>)
  type: Constructor
  source:
    id: .ctor
    path: E:\Class\Cloud computing\assignment 2 my work\assignment 2 task 6\assignment 2 task 6\assignment 2 task 6\App_Start\IdentityConfig.cs
    startLine: 37
  assemblies:
  - assignment 2 task 6
  namespace: assignment_2_task_6
  syntax:
    content: public ApplicationUserManager(IUserStore<ApplicationUser> store)
    parameters:
    - id: store
      type: Microsoft.AspNet.Identity.IUserStore{assignment_2_task_6.Models.ApplicationUser}
    content.vb: Public Sub New(store As IUserStore(Of ApplicationUser))
  overload: assignment_2_task_6.ApplicationUserManager.#ctor*
  nameWithType.vb: ApplicationUserManager.ApplicationUserManager(IUserStore(Of ApplicationUser))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: assignment_2_task_6.ApplicationUserManager.ApplicationUserManager(Microsoft.AspNet.Identity.IUserStore(Of assignment_2_task_6.Models.ApplicationUser))
  name.vb: ApplicationUserManager(IUserStore(Of ApplicationUser))
- uid: assignment_2_task_6.ApplicationUserManager.Create(Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions{assignment_2_task_6.ApplicationUserManager},Microsoft.Owin.IOwinContext)
  commentId: M:assignment_2_task_6.ApplicationUserManager.Create(Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions{assignment_2_task_6.ApplicationUserManager},Microsoft.Owin.IOwinContext)
  id: Create(Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions{assignment_2_task_6.ApplicationUserManager},Microsoft.Owin.IOwinContext)
  parent: assignment_2_task_6.ApplicationUserManager
  langs:
  - csharp
  - vb
  name: Create(IdentityFactoryOptions<ApplicationUserManager>, IOwinContext)
  nameWithType: ApplicationUserManager.Create(IdentityFactoryOptions<ApplicationUserManager>, IOwinContext)
  fullName: assignment_2_task_6.ApplicationUserManager.Create(Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions<assignment_2_task_6.ApplicationUserManager>, Microsoft.Owin.IOwinContext)
  type: Method
  source:
    id: Create
    path: E:\Class\Cloud computing\assignment 2 my work\assignment 2 task 6\assignment 2 task 6\assignment 2 task 6\App_Start\IdentityConfig.cs
    startLine: 42
  assemblies:
  - assignment 2 task 6
  namespace: assignment_2_task_6
  syntax:
    content: public static ApplicationUserManager Create(IdentityFactoryOptions<ApplicationUserManager> options, IOwinContext context)
    parameters:
    - id: options
      type: Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions{assignment_2_task_6.ApplicationUserManager}
    - id: context
      type: Microsoft.Owin.IOwinContext
    return:
      type: assignment_2_task_6.ApplicationUserManager
    content.vb: Public Shared Function Create(options As IdentityFactoryOptions(Of ApplicationUserManager), context As IOwinContext) As ApplicationUserManager
  overload: assignment_2_task_6.ApplicationUserManager.Create*
  nameWithType.vb: ApplicationUserManager.Create(IdentityFactoryOptions(Of ApplicationUserManager), IOwinContext)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: assignment_2_task_6.ApplicationUserManager.Create(Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions(Of assignment_2_task_6.ApplicationUserManager), Microsoft.Owin.IOwinContext)
  name.vb: Create(IdentityFactoryOptions(Of ApplicationUserManager), IOwinContext)
references:
- uid: assignment_2_task_6
  commentId: N:assignment_2_task_6
  name: assignment_2_task_6
  nameWithType: assignment_2_task_6
  fullName: assignment_2_task_6
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  commentId: T:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  parent: Microsoft.AspNet.Identity
  definition: Microsoft.AspNet.Identity.UserManager`2
  name: UserManager<ApplicationUser, String>
  nameWithType: UserManager<ApplicationUser, String>
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>
  nameWithType.vb: UserManager(Of ApplicationUser, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String)
  name.vb: UserManager(Of ApplicationUser, String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNet.Identity.UserManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: assignment_2_task_6.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: assignment_2_task_6.Models.ApplicationUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNet.Identity.UserManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: assignment_2_task_6.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: assignment_2_task_6.Models.ApplicationUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser}
  commentId: T:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser}
  parent: Microsoft.AspNet.Identity
  definition: Microsoft.AspNet.Identity.UserManager`1
  name: UserManager<ApplicationUser>
  nameWithType: UserManager<ApplicationUser>
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser>
  nameWithType.vb: UserManager(Of ApplicationUser)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser)
  name.vb: UserManager(Of ApplicationUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNet.Identity.UserManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: assignment_2_task_6.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: assignment_2_task_6.Models.ApplicationUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNet.Identity.UserManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: assignment_2_task_6.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: assignment_2_task_6.Models.ApplicationUser
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.Dispose
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.Dispose
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.Dispose
  name: Dispose()
  nameWithType: UserManager<ApplicationUser, String>.Dispose()
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.Dispose()
  nameWithType.vb: UserManager(Of ApplicationUser, String).Dispose()
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).Dispose()
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.Dispose
    name: Dispose
    nameWithType: UserManager<ApplicationUser, String>.Dispose
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.Dispose
    name: Dispose
    nameWithType: UserManager(Of ApplicationUser, String).Dispose
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.CreateIdentityAsync(assignment_2_task_6.Models.ApplicationUser,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.CreateIdentityAsync(assignment_2_task_6.Models.ApplicationUser,System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.CreateIdentityAsync(`0,System.String)
  name: CreateIdentityAsync(ApplicationUser, String)
  nameWithType: UserManager<ApplicationUser, String>.CreateIdentityAsync(ApplicationUser, String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.CreateIdentityAsync(assignment_2_task_6.Models.ApplicationUser, System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).CreateIdentityAsync(ApplicationUser, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).CreateIdentityAsync(assignment_2_task_6.Models.ApplicationUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.CreateIdentityAsync(`0,System.String)
    name: CreateIdentityAsync
    nameWithType: UserManager<ApplicationUser, String>.CreateIdentityAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.CreateIdentityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: assignment_2_task_6.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: assignment_2_task_6.Models.ApplicationUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.CreateIdentityAsync(`0,System.String)
    name: CreateIdentityAsync
    nameWithType: UserManager(Of ApplicationUser, String).CreateIdentityAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).CreateIdentityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: assignment_2_task_6.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: assignment_2_task_6.Models.ApplicationUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.CreateAsync(assignment_2_task_6.Models.ApplicationUser)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.CreateAsync(assignment_2_task_6.Models.ApplicationUser)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.CreateAsync(`0)
  name: CreateAsync(ApplicationUser)
  nameWithType: UserManager<ApplicationUser, String>.CreateAsync(ApplicationUser)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.CreateAsync(assignment_2_task_6.Models.ApplicationUser)
  nameWithType.vb: UserManager(Of ApplicationUser, String).CreateAsync(ApplicationUser)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).CreateAsync(assignment_2_task_6.Models.ApplicationUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.CreateAsync(`0)
    name: CreateAsync
    nameWithType: UserManager<ApplicationUser, String>.CreateAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.CreateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: assignment_2_task_6.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: assignment_2_task_6.Models.ApplicationUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.CreateAsync(`0)
    name: CreateAsync
    nameWithType: UserManager(Of ApplicationUser, String).CreateAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).CreateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: assignment_2_task_6.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: assignment_2_task_6.Models.ApplicationUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.UpdateAsync(assignment_2_task_6.Models.ApplicationUser)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.UpdateAsync(assignment_2_task_6.Models.ApplicationUser)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.UpdateAsync(`0)
  name: UpdateAsync(ApplicationUser)
  nameWithType: UserManager<ApplicationUser, String>.UpdateAsync(ApplicationUser)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.UpdateAsync(assignment_2_task_6.Models.ApplicationUser)
  nameWithType.vb: UserManager(Of ApplicationUser, String).UpdateAsync(ApplicationUser)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).UpdateAsync(assignment_2_task_6.Models.ApplicationUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.UpdateAsync(`0)
    name: UpdateAsync
    nameWithType: UserManager<ApplicationUser, String>.UpdateAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.UpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: assignment_2_task_6.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: assignment_2_task_6.Models.ApplicationUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.UpdateAsync(`0)
    name: UpdateAsync
    nameWithType: UserManager(Of ApplicationUser, String).UpdateAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).UpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: assignment_2_task_6.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: assignment_2_task_6.Models.ApplicationUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.DeleteAsync(assignment_2_task_6.Models.ApplicationUser)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.DeleteAsync(assignment_2_task_6.Models.ApplicationUser)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.DeleteAsync(`0)
  name: DeleteAsync(ApplicationUser)
  nameWithType: UserManager<ApplicationUser, String>.DeleteAsync(ApplicationUser)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.DeleteAsync(assignment_2_task_6.Models.ApplicationUser)
  nameWithType.vb: UserManager(Of ApplicationUser, String).DeleteAsync(ApplicationUser)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).DeleteAsync(assignment_2_task_6.Models.ApplicationUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.DeleteAsync(`0)
    name: DeleteAsync
    nameWithType: UserManager<ApplicationUser, String>.DeleteAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: assignment_2_task_6.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: assignment_2_task_6.Models.ApplicationUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.DeleteAsync(`0)
    name: DeleteAsync
    nameWithType: UserManager(Of ApplicationUser, String).DeleteAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: assignment_2_task_6.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: assignment_2_task_6.Models.ApplicationUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.FindByIdAsync(System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.FindByIdAsync(System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.FindByIdAsync(`1)
  name: FindByIdAsync(String)
  nameWithType: UserManager<ApplicationUser, String>.FindByIdAsync(String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.FindByIdAsync(System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).FindByIdAsync(String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).FindByIdAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.FindByIdAsync(`1)
    name: FindByIdAsync
    nameWithType: UserManager<ApplicationUser, String>.FindByIdAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.FindByIdAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.FindByIdAsync(`1)
    name: FindByIdAsync
    nameWithType: UserManager(Of ApplicationUser, String).FindByIdAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).FindByIdAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.FindByNameAsync(System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.FindByNameAsync(System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.FindByNameAsync(System.String)
  name: FindByNameAsync(String)
  nameWithType: UserManager<ApplicationUser, String>.FindByNameAsync(String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.FindByNameAsync(System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).FindByNameAsync(String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).FindByNameAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.FindByNameAsync(System.String)
    name: FindByNameAsync
    nameWithType: UserManager<ApplicationUser, String>.FindByNameAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.FindByNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.FindByNameAsync(System.String)
    name: FindByNameAsync
    nameWithType: UserManager(Of ApplicationUser, String).FindByNameAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).FindByNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.CreateAsync(assignment_2_task_6.Models.ApplicationUser,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.CreateAsync(assignment_2_task_6.Models.ApplicationUser,System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.CreateAsync(`0,System.String)
  name: CreateAsync(ApplicationUser, String)
  nameWithType: UserManager<ApplicationUser, String>.CreateAsync(ApplicationUser, String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.CreateAsync(assignment_2_task_6.Models.ApplicationUser, System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).CreateAsync(ApplicationUser, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).CreateAsync(assignment_2_task_6.Models.ApplicationUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.CreateAsync(`0,System.String)
    name: CreateAsync
    nameWithType: UserManager<ApplicationUser, String>.CreateAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.CreateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: assignment_2_task_6.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: assignment_2_task_6.Models.ApplicationUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.CreateAsync(`0,System.String)
    name: CreateAsync
    nameWithType: UserManager(Of ApplicationUser, String).CreateAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).CreateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: assignment_2_task_6.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: assignment_2_task_6.Models.ApplicationUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.FindAsync(System.String,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.FindAsync(System.String,System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.FindAsync(System.String,System.String)
  name: FindAsync(String, String)
  nameWithType: UserManager<ApplicationUser, String>.FindAsync(String, String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.FindAsync(System.String, System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).FindAsync(String, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).FindAsync(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.FindAsync(System.String,System.String)
    name: FindAsync
    nameWithType: UserManager<ApplicationUser, String>.FindAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.FindAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.FindAsync(System.String,System.String)
    name: FindAsync
    nameWithType: UserManager(Of ApplicationUser, String).FindAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).FindAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.CheckPasswordAsync(assignment_2_task_6.Models.ApplicationUser,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.CheckPasswordAsync(assignment_2_task_6.Models.ApplicationUser,System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.CheckPasswordAsync(`0,System.String)
  name: CheckPasswordAsync(ApplicationUser, String)
  nameWithType: UserManager<ApplicationUser, String>.CheckPasswordAsync(ApplicationUser, String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.CheckPasswordAsync(assignment_2_task_6.Models.ApplicationUser, System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).CheckPasswordAsync(ApplicationUser, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).CheckPasswordAsync(assignment_2_task_6.Models.ApplicationUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.CheckPasswordAsync(`0,System.String)
    name: CheckPasswordAsync
    nameWithType: UserManager<ApplicationUser, String>.CheckPasswordAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.CheckPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: assignment_2_task_6.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: assignment_2_task_6.Models.ApplicationUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.CheckPasswordAsync(`0,System.String)
    name: CheckPasswordAsync
    nameWithType: UserManager(Of ApplicationUser, String).CheckPasswordAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).CheckPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: assignment_2_task_6.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: assignment_2_task_6.Models.ApplicationUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.HasPasswordAsync(System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.HasPasswordAsync(System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.HasPasswordAsync(`1)
  name: HasPasswordAsync(String)
  nameWithType: UserManager<ApplicationUser, String>.HasPasswordAsync(String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.HasPasswordAsync(System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).HasPasswordAsync(String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).HasPasswordAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.HasPasswordAsync(`1)
    name: HasPasswordAsync
    nameWithType: UserManager<ApplicationUser, String>.HasPasswordAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.HasPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.HasPasswordAsync(`1)
    name: HasPasswordAsync
    nameWithType: UserManager(Of ApplicationUser, String).HasPasswordAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).HasPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.AddPasswordAsync(System.String,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.AddPasswordAsync(System.String,System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.AddPasswordAsync(`1,System.String)
  name: AddPasswordAsync(String, String)
  nameWithType: UserManager<ApplicationUser, String>.AddPasswordAsync(String, String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.AddPasswordAsync(System.String, System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).AddPasswordAsync(String, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).AddPasswordAsync(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.AddPasswordAsync(`1,System.String)
    name: AddPasswordAsync
    nameWithType: UserManager<ApplicationUser, String>.AddPasswordAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.AddPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.AddPasswordAsync(`1,System.String)
    name: AddPasswordAsync
    nameWithType: UserManager(Of ApplicationUser, String).AddPasswordAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).AddPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.ChangePasswordAsync(System.String,System.String,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.ChangePasswordAsync(System.String,System.String,System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.ChangePasswordAsync(`1,System.String,System.String)
  name: ChangePasswordAsync(String, String, String)
  nameWithType: UserManager<ApplicationUser, String>.ChangePasswordAsync(String, String, String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.ChangePasswordAsync(System.String, System.String, System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).ChangePasswordAsync(String, String, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).ChangePasswordAsync(System.String, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.ChangePasswordAsync(`1,System.String,System.String)
    name: ChangePasswordAsync
    nameWithType: UserManager<ApplicationUser, String>.ChangePasswordAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.ChangePasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.ChangePasswordAsync(`1,System.String,System.String)
    name: ChangePasswordAsync
    nameWithType: UserManager(Of ApplicationUser, String).ChangePasswordAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).ChangePasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.RemovePasswordAsync(System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.RemovePasswordAsync(System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.RemovePasswordAsync(`1)
  name: RemovePasswordAsync(String)
  nameWithType: UserManager<ApplicationUser, String>.RemovePasswordAsync(String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.RemovePasswordAsync(System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).RemovePasswordAsync(String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).RemovePasswordAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.RemovePasswordAsync(`1)
    name: RemovePasswordAsync
    nameWithType: UserManager<ApplicationUser, String>.RemovePasswordAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.RemovePasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.RemovePasswordAsync(`1)
    name: RemovePasswordAsync
    nameWithType: UserManager(Of ApplicationUser, String).RemovePasswordAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).RemovePasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.UpdatePassword(Microsoft.AspNet.Identity.IUserPasswordStore{assignment_2_task_6.Models.ApplicationUser,System.String},assignment_2_task_6.Models.ApplicationUser,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.UpdatePassword(Microsoft.AspNet.Identity.IUserPasswordStore{assignment_2_task_6.Models.ApplicationUser,System.String},assignment_2_task_6.Models.ApplicationUser,System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.UpdatePassword(Microsoft.AspNet.Identity.IUserPasswordStore{`0,`1},`0,System.String)
  name: UpdatePassword(IUserPasswordStore<ApplicationUser, String>, ApplicationUser, String)
  nameWithType: UserManager<ApplicationUser, String>.UpdatePassword(IUserPasswordStore<ApplicationUser, String>, ApplicationUser, String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.UpdatePassword(Microsoft.AspNet.Identity.IUserPasswordStore<assignment_2_task_6.Models.ApplicationUser, System.String>, assignment_2_task_6.Models.ApplicationUser, System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).UpdatePassword(IUserPasswordStore(Of ApplicationUser, String), ApplicationUser, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).UpdatePassword(Microsoft.AspNet.Identity.IUserPasswordStore(Of assignment_2_task_6.Models.ApplicationUser, System.String), assignment_2_task_6.Models.ApplicationUser, System.String)
  name.vb: UpdatePassword(IUserPasswordStore(Of ApplicationUser, String), ApplicationUser, String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.UpdatePassword(Microsoft.AspNet.Identity.IUserPasswordStore{`0,`1},`0,System.String)
    name: UpdatePassword
    nameWithType: UserManager<ApplicationUser, String>.UpdatePassword
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.UpdatePassword
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNet.Identity.IUserPasswordStore`2
    name: IUserPasswordStore
    nameWithType: IUserPasswordStore
    fullName: Microsoft.AspNet.Identity.IUserPasswordStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: assignment_2_task_6.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: assignment_2_task_6.Models.ApplicationUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: assignment_2_task_6.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: assignment_2_task_6.Models.ApplicationUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.UpdatePassword(Microsoft.AspNet.Identity.IUserPasswordStore{`0,`1},`0,System.String)
    name: UpdatePassword
    nameWithType: UserManager(Of ApplicationUser, String).UpdatePassword
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).UpdatePassword
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNet.Identity.IUserPasswordStore`2
    name: IUserPasswordStore
    nameWithType: IUserPasswordStore
    fullName: Microsoft.AspNet.Identity.IUserPasswordStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: assignment_2_task_6.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: assignment_2_task_6.Models.ApplicationUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: assignment_2_task_6.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: assignment_2_task_6.Models.ApplicationUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.VerifyPasswordAsync(Microsoft.AspNet.Identity.IUserPasswordStore{assignment_2_task_6.Models.ApplicationUser,System.String},assignment_2_task_6.Models.ApplicationUser,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.VerifyPasswordAsync(Microsoft.AspNet.Identity.IUserPasswordStore{assignment_2_task_6.Models.ApplicationUser,System.String},assignment_2_task_6.Models.ApplicationUser,System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.VerifyPasswordAsync(Microsoft.AspNet.Identity.IUserPasswordStore{`0,`1},`0,System.String)
  name: VerifyPasswordAsync(IUserPasswordStore<ApplicationUser, String>, ApplicationUser, String)
  nameWithType: UserManager<ApplicationUser, String>.VerifyPasswordAsync(IUserPasswordStore<ApplicationUser, String>, ApplicationUser, String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.VerifyPasswordAsync(Microsoft.AspNet.Identity.IUserPasswordStore<assignment_2_task_6.Models.ApplicationUser, System.String>, assignment_2_task_6.Models.ApplicationUser, System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).VerifyPasswordAsync(IUserPasswordStore(Of ApplicationUser, String), ApplicationUser, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).VerifyPasswordAsync(Microsoft.AspNet.Identity.IUserPasswordStore(Of assignment_2_task_6.Models.ApplicationUser, System.String), assignment_2_task_6.Models.ApplicationUser, System.String)
  name.vb: VerifyPasswordAsync(IUserPasswordStore(Of ApplicationUser, String), ApplicationUser, String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.VerifyPasswordAsync(Microsoft.AspNet.Identity.IUserPasswordStore{`0,`1},`0,System.String)
    name: VerifyPasswordAsync
    nameWithType: UserManager<ApplicationUser, String>.VerifyPasswordAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.VerifyPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNet.Identity.IUserPasswordStore`2
    name: IUserPasswordStore
    nameWithType: IUserPasswordStore
    fullName: Microsoft.AspNet.Identity.IUserPasswordStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: assignment_2_task_6.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: assignment_2_task_6.Models.ApplicationUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: assignment_2_task_6.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: assignment_2_task_6.Models.ApplicationUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.VerifyPasswordAsync(Microsoft.AspNet.Identity.IUserPasswordStore{`0,`1},`0,System.String)
    name: VerifyPasswordAsync
    nameWithType: UserManager(Of ApplicationUser, String).VerifyPasswordAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).VerifyPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNet.Identity.IUserPasswordStore`2
    name: IUserPasswordStore
    nameWithType: IUserPasswordStore
    fullName: Microsoft.AspNet.Identity.IUserPasswordStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: assignment_2_task_6.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: assignment_2_task_6.Models.ApplicationUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: assignment_2_task_6.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: assignment_2_task_6.Models.ApplicationUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GetSecurityStampAsync(System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GetSecurityStampAsync(System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.GetSecurityStampAsync(`1)
  name: GetSecurityStampAsync(String)
  nameWithType: UserManager<ApplicationUser, String>.GetSecurityStampAsync(String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.GetSecurityStampAsync(System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).GetSecurityStampAsync(String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).GetSecurityStampAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetSecurityStampAsync(`1)
    name: GetSecurityStampAsync
    nameWithType: UserManager<ApplicationUser, String>.GetSecurityStampAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.GetSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetSecurityStampAsync(`1)
    name: GetSecurityStampAsync
    nameWithType: UserManager(Of ApplicationUser, String).GetSecurityStampAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).GetSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.UpdateSecurityStampAsync(System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.UpdateSecurityStampAsync(System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.UpdateSecurityStampAsync(`1)
  name: UpdateSecurityStampAsync(String)
  nameWithType: UserManager<ApplicationUser, String>.UpdateSecurityStampAsync(String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.UpdateSecurityStampAsync(System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).UpdateSecurityStampAsync(String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).UpdateSecurityStampAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.UpdateSecurityStampAsync(`1)
    name: UpdateSecurityStampAsync
    nameWithType: UserManager<ApplicationUser, String>.UpdateSecurityStampAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.UpdateSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.UpdateSecurityStampAsync(`1)
    name: UpdateSecurityStampAsync
    nameWithType: UserManager(Of ApplicationUser, String).UpdateSecurityStampAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).UpdateSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GeneratePasswordResetTokenAsync(System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GeneratePasswordResetTokenAsync(System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.GeneratePasswordResetTokenAsync(`1)
  name: GeneratePasswordResetTokenAsync(String)
  nameWithType: UserManager<ApplicationUser, String>.GeneratePasswordResetTokenAsync(String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.GeneratePasswordResetTokenAsync(System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).GeneratePasswordResetTokenAsync(String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).GeneratePasswordResetTokenAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GeneratePasswordResetTokenAsync(`1)
    name: GeneratePasswordResetTokenAsync
    nameWithType: UserManager<ApplicationUser, String>.GeneratePasswordResetTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.GeneratePasswordResetTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GeneratePasswordResetTokenAsync(`1)
    name: GeneratePasswordResetTokenAsync
    nameWithType: UserManager(Of ApplicationUser, String).GeneratePasswordResetTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).GeneratePasswordResetTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.ResetPasswordAsync(System.String,System.String,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.ResetPasswordAsync(System.String,System.String,System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.ResetPasswordAsync(`1,System.String,System.String)
  name: ResetPasswordAsync(String, String, String)
  nameWithType: UserManager<ApplicationUser, String>.ResetPasswordAsync(String, String, String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.ResetPasswordAsync(System.String, System.String, System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).ResetPasswordAsync(String, String, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).ResetPasswordAsync(System.String, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.ResetPasswordAsync(`1,System.String,System.String)
    name: ResetPasswordAsync
    nameWithType: UserManager<ApplicationUser, String>.ResetPasswordAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.ResetPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.ResetPasswordAsync(`1,System.String,System.String)
    name: ResetPasswordAsync
    nameWithType: UserManager(Of ApplicationUser, String).ResetPasswordAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).ResetPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
  name: FindAsync(UserLoginInfo)
  nameWithType: UserManager<ApplicationUser, String>.FindAsync(UserLoginInfo)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
  nameWithType.vb: UserManager(Of ApplicationUser, String).FindAsync(UserLoginInfo)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
    name: FindAsync
    nameWithType: UserManager<ApplicationUser, String>.FindAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.FindAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNet.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNet.Identity.UserLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
    name: FindAsync
    nameWithType: UserManager(Of ApplicationUser, String).FindAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).FindAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNet.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNet.Identity.UserLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.RemoveLoginAsync(System.String,Microsoft.AspNet.Identity.UserLoginInfo)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.RemoveLoginAsync(System.String,Microsoft.AspNet.Identity.UserLoginInfo)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.RemoveLoginAsync(`1,Microsoft.AspNet.Identity.UserLoginInfo)
  name: RemoveLoginAsync(String, UserLoginInfo)
  nameWithType: UserManager<ApplicationUser, String>.RemoveLoginAsync(String, UserLoginInfo)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.RemoveLoginAsync(System.String, Microsoft.AspNet.Identity.UserLoginInfo)
  nameWithType.vb: UserManager(Of ApplicationUser, String).RemoveLoginAsync(String, UserLoginInfo)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).RemoveLoginAsync(System.String, Microsoft.AspNet.Identity.UserLoginInfo)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.RemoveLoginAsync(`1,Microsoft.AspNet.Identity.UserLoginInfo)
    name: RemoveLoginAsync
    nameWithType: UserManager<ApplicationUser, String>.RemoveLoginAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.RemoveLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNet.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNet.Identity.UserLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.RemoveLoginAsync(`1,Microsoft.AspNet.Identity.UserLoginInfo)
    name: RemoveLoginAsync
    nameWithType: UserManager(Of ApplicationUser, String).RemoveLoginAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).RemoveLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNet.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNet.Identity.UserLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.AddLoginAsync(System.String,Microsoft.AspNet.Identity.UserLoginInfo)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.AddLoginAsync(System.String,Microsoft.AspNet.Identity.UserLoginInfo)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.AddLoginAsync(`1,Microsoft.AspNet.Identity.UserLoginInfo)
  name: AddLoginAsync(String, UserLoginInfo)
  nameWithType: UserManager<ApplicationUser, String>.AddLoginAsync(String, UserLoginInfo)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.AddLoginAsync(System.String, Microsoft.AspNet.Identity.UserLoginInfo)
  nameWithType.vb: UserManager(Of ApplicationUser, String).AddLoginAsync(String, UserLoginInfo)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).AddLoginAsync(System.String, Microsoft.AspNet.Identity.UserLoginInfo)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.AddLoginAsync(`1,Microsoft.AspNet.Identity.UserLoginInfo)
    name: AddLoginAsync
    nameWithType: UserManager<ApplicationUser, String>.AddLoginAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.AddLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNet.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNet.Identity.UserLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.AddLoginAsync(`1,Microsoft.AspNet.Identity.UserLoginInfo)
    name: AddLoginAsync
    nameWithType: UserManager(Of ApplicationUser, String).AddLoginAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).AddLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNet.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNet.Identity.UserLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GetLoginsAsync(System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GetLoginsAsync(System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.GetLoginsAsync(`1)
  name: GetLoginsAsync(String)
  nameWithType: UserManager<ApplicationUser, String>.GetLoginsAsync(String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.GetLoginsAsync(System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).GetLoginsAsync(String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).GetLoginsAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetLoginsAsync(`1)
    name: GetLoginsAsync
    nameWithType: UserManager<ApplicationUser, String>.GetLoginsAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.GetLoginsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetLoginsAsync(`1)
    name: GetLoginsAsync
    nameWithType: UserManager(Of ApplicationUser, String).GetLoginsAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).GetLoginsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.AddClaimAsync(System.String,System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.AddClaimAsync(System.String,System.Security.Claims.Claim)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.AddClaimAsync(`1,System.Security.Claims.Claim)
  name: AddClaimAsync(String, Claim)
  nameWithType: UserManager<ApplicationUser, String>.AddClaimAsync(String, Claim)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.AddClaimAsync(System.String, System.Security.Claims.Claim)
  nameWithType.vb: UserManager(Of ApplicationUser, String).AddClaimAsync(String, Claim)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).AddClaimAsync(System.String, System.Security.Claims.Claim)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.AddClaimAsync(`1,System.Security.Claims.Claim)
    name: AddClaimAsync
    nameWithType: UserManager<ApplicationUser, String>.AddClaimAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.AddClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.AddClaimAsync(`1,System.Security.Claims.Claim)
    name: AddClaimAsync
    nameWithType: UserManager(Of ApplicationUser, String).AddClaimAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).AddClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.RemoveClaimAsync(System.String,System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.RemoveClaimAsync(System.String,System.Security.Claims.Claim)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.RemoveClaimAsync(`1,System.Security.Claims.Claim)
  name: RemoveClaimAsync(String, Claim)
  nameWithType: UserManager<ApplicationUser, String>.RemoveClaimAsync(String, Claim)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.RemoveClaimAsync(System.String, System.Security.Claims.Claim)
  nameWithType.vb: UserManager(Of ApplicationUser, String).RemoveClaimAsync(String, Claim)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).RemoveClaimAsync(System.String, System.Security.Claims.Claim)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.RemoveClaimAsync(`1,System.Security.Claims.Claim)
    name: RemoveClaimAsync
    nameWithType: UserManager<ApplicationUser, String>.RemoveClaimAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.RemoveClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.RemoveClaimAsync(`1,System.Security.Claims.Claim)
    name: RemoveClaimAsync
    nameWithType: UserManager(Of ApplicationUser, String).RemoveClaimAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).RemoveClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GetClaimsAsync(System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GetClaimsAsync(System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.GetClaimsAsync(`1)
  name: GetClaimsAsync(String)
  nameWithType: UserManager<ApplicationUser, String>.GetClaimsAsync(String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.GetClaimsAsync(System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).GetClaimsAsync(String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).GetClaimsAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetClaimsAsync(`1)
    name: GetClaimsAsync
    nameWithType: UserManager<ApplicationUser, String>.GetClaimsAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.GetClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetClaimsAsync(`1)
    name: GetClaimsAsync
    nameWithType: UserManager(Of ApplicationUser, String).GetClaimsAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).GetClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.AddToRoleAsync(System.String,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.AddToRoleAsync(System.String,System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.AddToRoleAsync(`1,System.String)
  name: AddToRoleAsync(String, String)
  nameWithType: UserManager<ApplicationUser, String>.AddToRoleAsync(String, String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.AddToRoleAsync(System.String, System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).AddToRoleAsync(String, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).AddToRoleAsync(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.AddToRoleAsync(`1,System.String)
    name: AddToRoleAsync
    nameWithType: UserManager<ApplicationUser, String>.AddToRoleAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.AddToRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.AddToRoleAsync(`1,System.String)
    name: AddToRoleAsync
    nameWithType: UserManager(Of ApplicationUser, String).AddToRoleAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).AddToRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.AddToRolesAsync(System.String,System.String[])
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.AddToRolesAsync(System.String,System.String[])
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.AddToRolesAsync(`1,System.String[])
  name: AddToRolesAsync(String, String[])
  nameWithType: UserManager<ApplicationUser, String>.AddToRolesAsync(String, String[])
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.AddToRolesAsync(System.String, System.String[])
  nameWithType.vb: UserManager(Of ApplicationUser, String).AddToRolesAsync(String, String())
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).AddToRolesAsync(System.String, System.String())
  name.vb: AddToRolesAsync(String, String())
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.AddToRolesAsync(`1,System.String[])
    name: AddToRolesAsync
    nameWithType: UserManager<ApplicationUser, String>.AddToRolesAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.AddToRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.AddToRolesAsync(`1,System.String[])
    name: AddToRolesAsync
    nameWithType: UserManager(Of ApplicationUser, String).AddToRolesAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).AddToRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.RemoveFromRolesAsync(System.String,System.String[])
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.RemoveFromRolesAsync(System.String,System.String[])
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.RemoveFromRolesAsync(`1,System.String[])
  name: RemoveFromRolesAsync(String, String[])
  nameWithType: UserManager<ApplicationUser, String>.RemoveFromRolesAsync(String, String[])
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.RemoveFromRolesAsync(System.String, System.String[])
  nameWithType.vb: UserManager(Of ApplicationUser, String).RemoveFromRolesAsync(String, String())
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).RemoveFromRolesAsync(System.String, System.String())
  name.vb: RemoveFromRolesAsync(String, String())
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.RemoveFromRolesAsync(`1,System.String[])
    name: RemoveFromRolesAsync
    nameWithType: UserManager<ApplicationUser, String>.RemoveFromRolesAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.RemoveFromRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.RemoveFromRolesAsync(`1,System.String[])
    name: RemoveFromRolesAsync
    nameWithType: UserManager(Of ApplicationUser, String).RemoveFromRolesAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).RemoveFromRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.RemoveFromRoleAsync(System.String,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.RemoveFromRoleAsync(System.String,System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.RemoveFromRoleAsync(`1,System.String)
  name: RemoveFromRoleAsync(String, String)
  nameWithType: UserManager<ApplicationUser, String>.RemoveFromRoleAsync(String, String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.RemoveFromRoleAsync(System.String, System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).RemoveFromRoleAsync(String, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).RemoveFromRoleAsync(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.RemoveFromRoleAsync(`1,System.String)
    name: RemoveFromRoleAsync
    nameWithType: UserManager<ApplicationUser, String>.RemoveFromRoleAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.RemoveFromRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.RemoveFromRoleAsync(`1,System.String)
    name: RemoveFromRoleAsync
    nameWithType: UserManager(Of ApplicationUser, String).RemoveFromRoleAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).RemoveFromRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GetRolesAsync(System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GetRolesAsync(System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.GetRolesAsync(`1)
  name: GetRolesAsync(String)
  nameWithType: UserManager<ApplicationUser, String>.GetRolesAsync(String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.GetRolesAsync(System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).GetRolesAsync(String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).GetRolesAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetRolesAsync(`1)
    name: GetRolesAsync
    nameWithType: UserManager<ApplicationUser, String>.GetRolesAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.GetRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetRolesAsync(`1)
    name: GetRolesAsync
    nameWithType: UserManager(Of ApplicationUser, String).GetRolesAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).GetRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.IsInRoleAsync(System.String,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.IsInRoleAsync(System.String,System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.IsInRoleAsync(`1,System.String)
  name: IsInRoleAsync(String, String)
  nameWithType: UserManager<ApplicationUser, String>.IsInRoleAsync(String, String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.IsInRoleAsync(System.String, System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).IsInRoleAsync(String, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).IsInRoleAsync(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.IsInRoleAsync(`1,System.String)
    name: IsInRoleAsync
    nameWithType: UserManager<ApplicationUser, String>.IsInRoleAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.IsInRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.IsInRoleAsync(`1,System.String)
    name: IsInRoleAsync
    nameWithType: UserManager(Of ApplicationUser, String).IsInRoleAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).IsInRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GetEmailAsync(System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GetEmailAsync(System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.GetEmailAsync(`1)
  name: GetEmailAsync(String)
  nameWithType: UserManager<ApplicationUser, String>.GetEmailAsync(String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.GetEmailAsync(System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).GetEmailAsync(String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).GetEmailAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetEmailAsync(`1)
    name: GetEmailAsync
    nameWithType: UserManager<ApplicationUser, String>.GetEmailAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.GetEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetEmailAsync(`1)
    name: GetEmailAsync
    nameWithType: UserManager(Of ApplicationUser, String).GetEmailAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).GetEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SetEmailAsync(System.String,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SetEmailAsync(System.String,System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.SetEmailAsync(`1,System.String)
  name: SetEmailAsync(String, String)
  nameWithType: UserManager<ApplicationUser, String>.SetEmailAsync(String, String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.SetEmailAsync(System.String, System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).SetEmailAsync(String, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).SetEmailAsync(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.SetEmailAsync(`1,System.String)
    name: SetEmailAsync
    nameWithType: UserManager<ApplicationUser, String>.SetEmailAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.SetEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.SetEmailAsync(`1,System.String)
    name: SetEmailAsync
    nameWithType: UserManager(Of ApplicationUser, String).SetEmailAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).SetEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.FindByEmailAsync(System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.FindByEmailAsync(System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.FindByEmailAsync(System.String)
  name: FindByEmailAsync(String)
  nameWithType: UserManager<ApplicationUser, String>.FindByEmailAsync(String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.FindByEmailAsync(System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).FindByEmailAsync(String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).FindByEmailAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.FindByEmailAsync(System.String)
    name: FindByEmailAsync
    nameWithType: UserManager<ApplicationUser, String>.FindByEmailAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.FindByEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.FindByEmailAsync(System.String)
    name: FindByEmailAsync
    nameWithType: UserManager(Of ApplicationUser, String).FindByEmailAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).FindByEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GenerateEmailConfirmationTokenAsync(System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GenerateEmailConfirmationTokenAsync(System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.GenerateEmailConfirmationTokenAsync(`1)
  name: GenerateEmailConfirmationTokenAsync(String)
  nameWithType: UserManager<ApplicationUser, String>.GenerateEmailConfirmationTokenAsync(String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.GenerateEmailConfirmationTokenAsync(System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).GenerateEmailConfirmationTokenAsync(String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).GenerateEmailConfirmationTokenAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GenerateEmailConfirmationTokenAsync(`1)
    name: GenerateEmailConfirmationTokenAsync
    nameWithType: UserManager<ApplicationUser, String>.GenerateEmailConfirmationTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.GenerateEmailConfirmationTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GenerateEmailConfirmationTokenAsync(`1)
    name: GenerateEmailConfirmationTokenAsync
    nameWithType: UserManager(Of ApplicationUser, String).GenerateEmailConfirmationTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).GenerateEmailConfirmationTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.ConfirmEmailAsync(System.String,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.ConfirmEmailAsync(System.String,System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.ConfirmEmailAsync(`1,System.String)
  name: ConfirmEmailAsync(String, String)
  nameWithType: UserManager<ApplicationUser, String>.ConfirmEmailAsync(String, String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.ConfirmEmailAsync(System.String, System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).ConfirmEmailAsync(String, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).ConfirmEmailAsync(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.ConfirmEmailAsync(`1,System.String)
    name: ConfirmEmailAsync
    nameWithType: UserManager<ApplicationUser, String>.ConfirmEmailAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.ConfirmEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.ConfirmEmailAsync(`1,System.String)
    name: ConfirmEmailAsync
    nameWithType: UserManager(Of ApplicationUser, String).ConfirmEmailAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).ConfirmEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.IsEmailConfirmedAsync(System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.IsEmailConfirmedAsync(System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.IsEmailConfirmedAsync(`1)
  name: IsEmailConfirmedAsync(String)
  nameWithType: UserManager<ApplicationUser, String>.IsEmailConfirmedAsync(String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.IsEmailConfirmedAsync(System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).IsEmailConfirmedAsync(String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).IsEmailConfirmedAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.IsEmailConfirmedAsync(`1)
    name: IsEmailConfirmedAsync
    nameWithType: UserManager<ApplicationUser, String>.IsEmailConfirmedAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.IsEmailConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.IsEmailConfirmedAsync(`1)
    name: IsEmailConfirmedAsync
    nameWithType: UserManager(Of ApplicationUser, String).IsEmailConfirmedAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).IsEmailConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GetPhoneNumberAsync(System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GetPhoneNumberAsync(System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.GetPhoneNumberAsync(`1)
  name: GetPhoneNumberAsync(String)
  nameWithType: UserManager<ApplicationUser, String>.GetPhoneNumberAsync(String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.GetPhoneNumberAsync(System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).GetPhoneNumberAsync(String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).GetPhoneNumberAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetPhoneNumberAsync(`1)
    name: GetPhoneNumberAsync
    nameWithType: UserManager<ApplicationUser, String>.GetPhoneNumberAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.GetPhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetPhoneNumberAsync(`1)
    name: GetPhoneNumberAsync
    nameWithType: UserManager(Of ApplicationUser, String).GetPhoneNumberAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).GetPhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SetPhoneNumberAsync(System.String,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SetPhoneNumberAsync(System.String,System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.SetPhoneNumberAsync(`1,System.String)
  name: SetPhoneNumberAsync(String, String)
  nameWithType: UserManager<ApplicationUser, String>.SetPhoneNumberAsync(String, String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.SetPhoneNumberAsync(System.String, System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).SetPhoneNumberAsync(String, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).SetPhoneNumberAsync(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.SetPhoneNumberAsync(`1,System.String)
    name: SetPhoneNumberAsync
    nameWithType: UserManager<ApplicationUser, String>.SetPhoneNumberAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.SetPhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.SetPhoneNumberAsync(`1,System.String)
    name: SetPhoneNumberAsync
    nameWithType: UserManager(Of ApplicationUser, String).SetPhoneNumberAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).SetPhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.ChangePhoneNumberAsync(System.String,System.String,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.ChangePhoneNumberAsync(System.String,System.String,System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.ChangePhoneNumberAsync(`1,System.String,System.String)
  name: ChangePhoneNumberAsync(String, String, String)
  nameWithType: UserManager<ApplicationUser, String>.ChangePhoneNumberAsync(String, String, String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.ChangePhoneNumberAsync(System.String, System.String, System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).ChangePhoneNumberAsync(String, String, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).ChangePhoneNumberAsync(System.String, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.ChangePhoneNumberAsync(`1,System.String,System.String)
    name: ChangePhoneNumberAsync
    nameWithType: UserManager<ApplicationUser, String>.ChangePhoneNumberAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.ChangePhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.ChangePhoneNumberAsync(`1,System.String,System.String)
    name: ChangePhoneNumberAsync
    nameWithType: UserManager(Of ApplicationUser, String).ChangePhoneNumberAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).ChangePhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.IsPhoneNumberConfirmedAsync(System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.IsPhoneNumberConfirmedAsync(System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.IsPhoneNumberConfirmedAsync(`1)
  name: IsPhoneNumberConfirmedAsync(String)
  nameWithType: UserManager<ApplicationUser, String>.IsPhoneNumberConfirmedAsync(String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.IsPhoneNumberConfirmedAsync(System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).IsPhoneNumberConfirmedAsync(String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).IsPhoneNumberConfirmedAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.IsPhoneNumberConfirmedAsync(`1)
    name: IsPhoneNumberConfirmedAsync
    nameWithType: UserManager<ApplicationUser, String>.IsPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.IsPhoneNumberConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.IsPhoneNumberConfirmedAsync(`1)
    name: IsPhoneNumberConfirmedAsync
    nameWithType: UserManager(Of ApplicationUser, String).IsPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).IsPhoneNumberConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GenerateChangePhoneNumberTokenAsync(System.String,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GenerateChangePhoneNumberTokenAsync(System.String,System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.GenerateChangePhoneNumberTokenAsync(`1,System.String)
  name: GenerateChangePhoneNumberTokenAsync(String, String)
  nameWithType: UserManager<ApplicationUser, String>.GenerateChangePhoneNumberTokenAsync(String, String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.GenerateChangePhoneNumberTokenAsync(System.String, System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).GenerateChangePhoneNumberTokenAsync(String, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).GenerateChangePhoneNumberTokenAsync(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GenerateChangePhoneNumberTokenAsync(`1,System.String)
    name: GenerateChangePhoneNumberTokenAsync
    nameWithType: UserManager<ApplicationUser, String>.GenerateChangePhoneNumberTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.GenerateChangePhoneNumberTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GenerateChangePhoneNumberTokenAsync(`1,System.String)
    name: GenerateChangePhoneNumberTokenAsync
    nameWithType: UserManager(Of ApplicationUser, String).GenerateChangePhoneNumberTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).GenerateChangePhoneNumberTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.VerifyChangePhoneNumberTokenAsync(System.String,System.String,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.VerifyChangePhoneNumberTokenAsync(System.String,System.String,System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.VerifyChangePhoneNumberTokenAsync(`1,System.String,System.String)
  name: VerifyChangePhoneNumberTokenAsync(String, String, String)
  nameWithType: UserManager<ApplicationUser, String>.VerifyChangePhoneNumberTokenAsync(String, String, String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.VerifyChangePhoneNumberTokenAsync(System.String, System.String, System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).VerifyChangePhoneNumberTokenAsync(String, String, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).VerifyChangePhoneNumberTokenAsync(System.String, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.VerifyChangePhoneNumberTokenAsync(`1,System.String,System.String)
    name: VerifyChangePhoneNumberTokenAsync
    nameWithType: UserManager<ApplicationUser, String>.VerifyChangePhoneNumberTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.VerifyChangePhoneNumberTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.VerifyChangePhoneNumberTokenAsync(`1,System.String,System.String)
    name: VerifyChangePhoneNumberTokenAsync
    nameWithType: UserManager(Of ApplicationUser, String).VerifyChangePhoneNumberTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).VerifyChangePhoneNumberTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.VerifyUserTokenAsync(System.String,System.String,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.VerifyUserTokenAsync(System.String,System.String,System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.VerifyUserTokenAsync(`1,System.String,System.String)
  name: VerifyUserTokenAsync(String, String, String)
  nameWithType: UserManager<ApplicationUser, String>.VerifyUserTokenAsync(String, String, String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.VerifyUserTokenAsync(System.String, System.String, System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).VerifyUserTokenAsync(String, String, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).VerifyUserTokenAsync(System.String, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.VerifyUserTokenAsync(`1,System.String,System.String)
    name: VerifyUserTokenAsync
    nameWithType: UserManager<ApplicationUser, String>.VerifyUserTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.VerifyUserTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.VerifyUserTokenAsync(`1,System.String,System.String)
    name: VerifyUserTokenAsync
    nameWithType: UserManager(Of ApplicationUser, String).VerifyUserTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).VerifyUserTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GenerateUserTokenAsync(System.String,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GenerateUserTokenAsync(System.String,System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.GenerateUserTokenAsync(System.String,`1)
  name: GenerateUserTokenAsync(String, String)
  nameWithType: UserManager<ApplicationUser, String>.GenerateUserTokenAsync(String, String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.GenerateUserTokenAsync(System.String, System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).GenerateUserTokenAsync(String, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).GenerateUserTokenAsync(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GenerateUserTokenAsync(System.String,`1)
    name: GenerateUserTokenAsync
    nameWithType: UserManager<ApplicationUser, String>.GenerateUserTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.GenerateUserTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GenerateUserTokenAsync(System.String,`1)
    name: GenerateUserTokenAsync
    nameWithType: UserManager(Of ApplicationUser, String).GenerateUserTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).GenerateUserTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.RegisterTwoFactorProvider(System.String,Microsoft.AspNet.Identity.IUserTokenProvider{assignment_2_task_6.Models.ApplicationUser,System.String})
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.RegisterTwoFactorProvider(System.String,Microsoft.AspNet.Identity.IUserTokenProvider{assignment_2_task_6.Models.ApplicationUser,System.String})
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.RegisterTwoFactorProvider(System.String,Microsoft.AspNet.Identity.IUserTokenProvider{`0,`1})
  name: RegisterTwoFactorProvider(String, IUserTokenProvider<ApplicationUser, String>)
  nameWithType: UserManager<ApplicationUser, String>.RegisterTwoFactorProvider(String, IUserTokenProvider<ApplicationUser, String>)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.RegisterTwoFactorProvider(System.String, Microsoft.AspNet.Identity.IUserTokenProvider<assignment_2_task_6.Models.ApplicationUser, System.String>)
  nameWithType.vb: UserManager(Of ApplicationUser, String).RegisterTwoFactorProvider(String, IUserTokenProvider(Of ApplicationUser, String))
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).RegisterTwoFactorProvider(System.String, Microsoft.AspNet.Identity.IUserTokenProvider(Of assignment_2_task_6.Models.ApplicationUser, System.String))
  name.vb: RegisterTwoFactorProvider(String, IUserTokenProvider(Of ApplicationUser, String))
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.RegisterTwoFactorProvider(System.String,Microsoft.AspNet.Identity.IUserTokenProvider{`0,`1})
    name: RegisterTwoFactorProvider
    nameWithType: UserManager<ApplicationUser, String>.RegisterTwoFactorProvider
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.RegisterTwoFactorProvider
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNet.Identity.IUserTokenProvider`2
    name: IUserTokenProvider
    nameWithType: IUserTokenProvider
    fullName: Microsoft.AspNet.Identity.IUserTokenProvider
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: assignment_2_task_6.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: assignment_2_task_6.Models.ApplicationUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.RegisterTwoFactorProvider(System.String,Microsoft.AspNet.Identity.IUserTokenProvider{`0,`1})
    name: RegisterTwoFactorProvider
    nameWithType: UserManager(Of ApplicationUser, String).RegisterTwoFactorProvider
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).RegisterTwoFactorProvider
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNet.Identity.IUserTokenProvider`2
    name: IUserTokenProvider
    nameWithType: IUserTokenProvider
    fullName: Microsoft.AspNet.Identity.IUserTokenProvider
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: assignment_2_task_6.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: assignment_2_task_6.Models.ApplicationUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GetValidTwoFactorProvidersAsync(System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GetValidTwoFactorProvidersAsync(System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.GetValidTwoFactorProvidersAsync(`1)
  name: GetValidTwoFactorProvidersAsync(String)
  nameWithType: UserManager<ApplicationUser, String>.GetValidTwoFactorProvidersAsync(String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.GetValidTwoFactorProvidersAsync(System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).GetValidTwoFactorProvidersAsync(String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).GetValidTwoFactorProvidersAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetValidTwoFactorProvidersAsync(`1)
    name: GetValidTwoFactorProvidersAsync
    nameWithType: UserManager<ApplicationUser, String>.GetValidTwoFactorProvidersAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.GetValidTwoFactorProvidersAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetValidTwoFactorProvidersAsync(`1)
    name: GetValidTwoFactorProvidersAsync
    nameWithType: UserManager(Of ApplicationUser, String).GetValidTwoFactorProvidersAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).GetValidTwoFactorProvidersAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.VerifyTwoFactorTokenAsync(System.String,System.String,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.VerifyTwoFactorTokenAsync(System.String,System.String,System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.VerifyTwoFactorTokenAsync(`1,System.String,System.String)
  name: VerifyTwoFactorTokenAsync(String, String, String)
  nameWithType: UserManager<ApplicationUser, String>.VerifyTwoFactorTokenAsync(String, String, String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.VerifyTwoFactorTokenAsync(System.String, System.String, System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).VerifyTwoFactorTokenAsync(String, String, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).VerifyTwoFactorTokenAsync(System.String, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.VerifyTwoFactorTokenAsync(`1,System.String,System.String)
    name: VerifyTwoFactorTokenAsync
    nameWithType: UserManager<ApplicationUser, String>.VerifyTwoFactorTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.VerifyTwoFactorTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.VerifyTwoFactorTokenAsync(`1,System.String,System.String)
    name: VerifyTwoFactorTokenAsync
    nameWithType: UserManager(Of ApplicationUser, String).VerifyTwoFactorTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).VerifyTwoFactorTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GenerateTwoFactorTokenAsync(System.String,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GenerateTwoFactorTokenAsync(System.String,System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.GenerateTwoFactorTokenAsync(`1,System.String)
  name: GenerateTwoFactorTokenAsync(String, String)
  nameWithType: UserManager<ApplicationUser, String>.GenerateTwoFactorTokenAsync(String, String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.GenerateTwoFactorTokenAsync(System.String, System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).GenerateTwoFactorTokenAsync(String, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).GenerateTwoFactorTokenAsync(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GenerateTwoFactorTokenAsync(`1,System.String)
    name: GenerateTwoFactorTokenAsync
    nameWithType: UserManager<ApplicationUser, String>.GenerateTwoFactorTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.GenerateTwoFactorTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GenerateTwoFactorTokenAsync(`1,System.String)
    name: GenerateTwoFactorTokenAsync
    nameWithType: UserManager(Of ApplicationUser, String).GenerateTwoFactorTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).GenerateTwoFactorTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.NotifyTwoFactorTokenAsync(System.String,System.String,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.NotifyTwoFactorTokenAsync(System.String,System.String,System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.NotifyTwoFactorTokenAsync(`1,System.String,System.String)
  name: NotifyTwoFactorTokenAsync(String, String, String)
  nameWithType: UserManager<ApplicationUser, String>.NotifyTwoFactorTokenAsync(String, String, String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.NotifyTwoFactorTokenAsync(System.String, System.String, System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).NotifyTwoFactorTokenAsync(String, String, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).NotifyTwoFactorTokenAsync(System.String, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.NotifyTwoFactorTokenAsync(`1,System.String,System.String)
    name: NotifyTwoFactorTokenAsync
    nameWithType: UserManager<ApplicationUser, String>.NotifyTwoFactorTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.NotifyTwoFactorTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.NotifyTwoFactorTokenAsync(`1,System.String,System.String)
    name: NotifyTwoFactorTokenAsync
    nameWithType: UserManager(Of ApplicationUser, String).NotifyTwoFactorTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).NotifyTwoFactorTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GetTwoFactorEnabledAsync(System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GetTwoFactorEnabledAsync(System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.GetTwoFactorEnabledAsync(`1)
  name: GetTwoFactorEnabledAsync(String)
  nameWithType: UserManager<ApplicationUser, String>.GetTwoFactorEnabledAsync(String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.GetTwoFactorEnabledAsync(System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).GetTwoFactorEnabledAsync(String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).GetTwoFactorEnabledAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetTwoFactorEnabledAsync(`1)
    name: GetTwoFactorEnabledAsync
    nameWithType: UserManager<ApplicationUser, String>.GetTwoFactorEnabledAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.GetTwoFactorEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetTwoFactorEnabledAsync(`1)
    name: GetTwoFactorEnabledAsync
    nameWithType: UserManager(Of ApplicationUser, String).GetTwoFactorEnabledAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).GetTwoFactorEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SetTwoFactorEnabledAsync(System.String,System.Boolean)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SetTwoFactorEnabledAsync(System.String,System.Boolean)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.SetTwoFactorEnabledAsync(`1,System.Boolean)
  name: SetTwoFactorEnabledAsync(String, Boolean)
  nameWithType: UserManager<ApplicationUser, String>.SetTwoFactorEnabledAsync(String, Boolean)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.SetTwoFactorEnabledAsync(System.String, System.Boolean)
  nameWithType.vb: UserManager(Of ApplicationUser, String).SetTwoFactorEnabledAsync(String, Boolean)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).SetTwoFactorEnabledAsync(System.String, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.SetTwoFactorEnabledAsync(`1,System.Boolean)
    name: SetTwoFactorEnabledAsync
    nameWithType: UserManager<ApplicationUser, String>.SetTwoFactorEnabledAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.SetTwoFactorEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.SetTwoFactorEnabledAsync(`1,System.Boolean)
    name: SetTwoFactorEnabledAsync
    nameWithType: UserManager(Of ApplicationUser, String).SetTwoFactorEnabledAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).SetTwoFactorEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SendEmailAsync(System.String,System.String,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SendEmailAsync(System.String,System.String,System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.SendEmailAsync(`1,System.String,System.String)
  name: SendEmailAsync(String, String, String)
  nameWithType: UserManager<ApplicationUser, String>.SendEmailAsync(String, String, String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.SendEmailAsync(System.String, System.String, System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).SendEmailAsync(String, String, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).SendEmailAsync(System.String, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.SendEmailAsync(`1,System.String,System.String)
    name: SendEmailAsync
    nameWithType: UserManager<ApplicationUser, String>.SendEmailAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.SendEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.SendEmailAsync(`1,System.String,System.String)
    name: SendEmailAsync
    nameWithType: UserManager(Of ApplicationUser, String).SendEmailAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).SendEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SendSmsAsync(System.String,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SendSmsAsync(System.String,System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.SendSmsAsync(`1,System.String)
  name: SendSmsAsync(String, String)
  nameWithType: UserManager<ApplicationUser, String>.SendSmsAsync(String, String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.SendSmsAsync(System.String, System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).SendSmsAsync(String, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).SendSmsAsync(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.SendSmsAsync(`1,System.String)
    name: SendSmsAsync
    nameWithType: UserManager<ApplicationUser, String>.SendSmsAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.SendSmsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.SendSmsAsync(`1,System.String)
    name: SendSmsAsync
    nameWithType: UserManager(Of ApplicationUser, String).SendSmsAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).SendSmsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.IsLockedOutAsync(System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.IsLockedOutAsync(System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.IsLockedOutAsync(`1)
  name: IsLockedOutAsync(String)
  nameWithType: UserManager<ApplicationUser, String>.IsLockedOutAsync(String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.IsLockedOutAsync(System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).IsLockedOutAsync(String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).IsLockedOutAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.IsLockedOutAsync(`1)
    name: IsLockedOutAsync
    nameWithType: UserManager<ApplicationUser, String>.IsLockedOutAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.IsLockedOutAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.IsLockedOutAsync(`1)
    name: IsLockedOutAsync
    nameWithType: UserManager(Of ApplicationUser, String).IsLockedOutAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).IsLockedOutAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SetLockoutEnabledAsync(System.String,System.Boolean)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SetLockoutEnabledAsync(System.String,System.Boolean)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.SetLockoutEnabledAsync(`1,System.Boolean)
  name: SetLockoutEnabledAsync(String, Boolean)
  nameWithType: UserManager<ApplicationUser, String>.SetLockoutEnabledAsync(String, Boolean)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.SetLockoutEnabledAsync(System.String, System.Boolean)
  nameWithType.vb: UserManager(Of ApplicationUser, String).SetLockoutEnabledAsync(String, Boolean)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).SetLockoutEnabledAsync(System.String, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.SetLockoutEnabledAsync(`1,System.Boolean)
    name: SetLockoutEnabledAsync
    nameWithType: UserManager<ApplicationUser, String>.SetLockoutEnabledAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.SetLockoutEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.SetLockoutEnabledAsync(`1,System.Boolean)
    name: SetLockoutEnabledAsync
    nameWithType: UserManager(Of ApplicationUser, String).SetLockoutEnabledAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).SetLockoutEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GetLockoutEnabledAsync(System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GetLockoutEnabledAsync(System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.GetLockoutEnabledAsync(`1)
  name: GetLockoutEnabledAsync(String)
  nameWithType: UserManager<ApplicationUser, String>.GetLockoutEnabledAsync(String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.GetLockoutEnabledAsync(System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).GetLockoutEnabledAsync(String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).GetLockoutEnabledAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetLockoutEnabledAsync(`1)
    name: GetLockoutEnabledAsync
    nameWithType: UserManager<ApplicationUser, String>.GetLockoutEnabledAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.GetLockoutEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetLockoutEnabledAsync(`1)
    name: GetLockoutEnabledAsync
    nameWithType: UserManager(Of ApplicationUser, String).GetLockoutEnabledAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).GetLockoutEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GetLockoutEndDateAsync(System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GetLockoutEndDateAsync(System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.GetLockoutEndDateAsync(`1)
  name: GetLockoutEndDateAsync(String)
  nameWithType: UserManager<ApplicationUser, String>.GetLockoutEndDateAsync(String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.GetLockoutEndDateAsync(System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).GetLockoutEndDateAsync(String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).GetLockoutEndDateAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetLockoutEndDateAsync(`1)
    name: GetLockoutEndDateAsync
    nameWithType: UserManager<ApplicationUser, String>.GetLockoutEndDateAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.GetLockoutEndDateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetLockoutEndDateAsync(`1)
    name: GetLockoutEndDateAsync
    nameWithType: UserManager(Of ApplicationUser, String).GetLockoutEndDateAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).GetLockoutEndDateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SetLockoutEndDateAsync(System.String,System.DateTimeOffset)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SetLockoutEndDateAsync(System.String,System.DateTimeOffset)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.SetLockoutEndDateAsync(`1,System.DateTimeOffset)
  name: SetLockoutEndDateAsync(String, DateTimeOffset)
  nameWithType: UserManager<ApplicationUser, String>.SetLockoutEndDateAsync(String, DateTimeOffset)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.SetLockoutEndDateAsync(System.String, System.DateTimeOffset)
  nameWithType.vb: UserManager(Of ApplicationUser, String).SetLockoutEndDateAsync(String, DateTimeOffset)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).SetLockoutEndDateAsync(System.String, System.DateTimeOffset)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.SetLockoutEndDateAsync(`1,System.DateTimeOffset)
    name: SetLockoutEndDateAsync
    nameWithType: UserManager<ApplicationUser, String>.SetLockoutEndDateAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.SetLockoutEndDateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.SetLockoutEndDateAsync(`1,System.DateTimeOffset)
    name: SetLockoutEndDateAsync
    nameWithType: UserManager(Of ApplicationUser, String).SetLockoutEndDateAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).SetLockoutEndDateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.AccessFailedAsync(System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.AccessFailedAsync(System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.AccessFailedAsync(`1)
  name: AccessFailedAsync(String)
  nameWithType: UserManager<ApplicationUser, String>.AccessFailedAsync(String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.AccessFailedAsync(System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).AccessFailedAsync(String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).AccessFailedAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.AccessFailedAsync(`1)
    name: AccessFailedAsync
    nameWithType: UserManager<ApplicationUser, String>.AccessFailedAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.AccessFailedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.AccessFailedAsync(`1)
    name: AccessFailedAsync
    nameWithType: UserManager(Of ApplicationUser, String).AccessFailedAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).AccessFailedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.ResetAccessFailedCountAsync(System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.ResetAccessFailedCountAsync(System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.ResetAccessFailedCountAsync(`1)
  name: ResetAccessFailedCountAsync(String)
  nameWithType: UserManager<ApplicationUser, String>.ResetAccessFailedCountAsync(String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.ResetAccessFailedCountAsync(System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).ResetAccessFailedCountAsync(String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).ResetAccessFailedCountAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.ResetAccessFailedCountAsync(`1)
    name: ResetAccessFailedCountAsync
    nameWithType: UserManager<ApplicationUser, String>.ResetAccessFailedCountAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.ResetAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.ResetAccessFailedCountAsync(`1)
    name: ResetAccessFailedCountAsync
    nameWithType: UserManager(Of ApplicationUser, String).ResetAccessFailedCountAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).ResetAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GetAccessFailedCountAsync(System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.GetAccessFailedCountAsync(System.String)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.GetAccessFailedCountAsync(`1)
  name: GetAccessFailedCountAsync(String)
  nameWithType: UserManager<ApplicationUser, String>.GetAccessFailedCountAsync(String)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.GetAccessFailedCountAsync(System.String)
  nameWithType.vb: UserManager(Of ApplicationUser, String).GetAccessFailedCountAsync(String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).GetAccessFailedCountAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetAccessFailedCountAsync(`1)
    name: GetAccessFailedCountAsync
    nameWithType: UserManager<ApplicationUser, String>.GetAccessFailedCountAsync
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.GetAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetAccessFailedCountAsync(`1)
    name: GetAccessFailedCountAsync
    nameWithType: UserManager(Of ApplicationUser, String).GetAccessFailedCountAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).GetAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.Dispose(System.Boolean)
  commentId: M:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.Dispose(System.Boolean)
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.Dispose(System.Boolean)
  name: Dispose(Boolean)
  nameWithType: UserManager<ApplicationUser, String>.Dispose(Boolean)
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.Dispose(System.Boolean)
  nameWithType.vb: UserManager(Of ApplicationUser, String).Dispose(Boolean)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).Dispose(System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.Dispose(System.Boolean)
    name: Dispose
    nameWithType: UserManager<ApplicationUser, String>.Dispose
    fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.Dispose(System.Boolean)
    name: Dispose
    nameWithType: UserManager(Of ApplicationUser, String).Dispose
    fullName: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.Store
  commentId: P:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.Store
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.Store
  name: Store
  nameWithType: UserManager<ApplicationUser, String>.Store
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.Store
  nameWithType.vb: UserManager(Of ApplicationUser, String).Store
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).Store
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.PasswordHasher
  commentId: P:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.PasswordHasher
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.PasswordHasher
  name: PasswordHasher
  nameWithType: UserManager<ApplicationUser, String>.PasswordHasher
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.PasswordHasher
  nameWithType.vb: UserManager(Of ApplicationUser, String).PasswordHasher
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).PasswordHasher
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.UserValidator
  commentId: P:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.UserValidator
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.UserValidator
  name: UserValidator
  nameWithType: UserManager<ApplicationUser, String>.UserValidator
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.UserValidator
  nameWithType.vb: UserManager(Of ApplicationUser, String).UserValidator
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).UserValidator
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.PasswordValidator
  commentId: P:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.PasswordValidator
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.PasswordValidator
  name: PasswordValidator
  nameWithType: UserManager<ApplicationUser, String>.PasswordValidator
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.PasswordValidator
  nameWithType.vb: UserManager(Of ApplicationUser, String).PasswordValidator
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).PasswordValidator
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.ClaimsIdentityFactory
  commentId: P:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.ClaimsIdentityFactory
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.ClaimsIdentityFactory
  name: ClaimsIdentityFactory
  nameWithType: UserManager<ApplicationUser, String>.ClaimsIdentityFactory
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.ClaimsIdentityFactory
  nameWithType.vb: UserManager(Of ApplicationUser, String).ClaimsIdentityFactory
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).ClaimsIdentityFactory
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.EmailService
  commentId: P:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.EmailService
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.EmailService
  name: EmailService
  nameWithType: UserManager<ApplicationUser, String>.EmailService
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.EmailService
  nameWithType.vb: UserManager(Of ApplicationUser, String).EmailService
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).EmailService
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SmsService
  commentId: P:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SmsService
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.SmsService
  name: SmsService
  nameWithType: UserManager<ApplicationUser, String>.SmsService
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.SmsService
  nameWithType.vb: UserManager(Of ApplicationUser, String).SmsService
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).SmsService
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.UserTokenProvider
  commentId: P:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.UserTokenProvider
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.UserTokenProvider
  name: UserTokenProvider
  nameWithType: UserManager<ApplicationUser, String>.UserTokenProvider
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.UserTokenProvider
  nameWithType.vb: UserManager(Of ApplicationUser, String).UserTokenProvider
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).UserTokenProvider
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.UserLockoutEnabledByDefault
  commentId: P:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.UserLockoutEnabledByDefault
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.UserLockoutEnabledByDefault
  name: UserLockoutEnabledByDefault
  nameWithType: UserManager<ApplicationUser, String>.UserLockoutEnabledByDefault
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.UserLockoutEnabledByDefault
  nameWithType.vb: UserManager(Of ApplicationUser, String).UserLockoutEnabledByDefault
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).UserLockoutEnabledByDefault
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.MaxFailedAccessAttemptsBeforeLockout
  commentId: P:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.MaxFailedAccessAttemptsBeforeLockout
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.MaxFailedAccessAttemptsBeforeLockout
  name: MaxFailedAccessAttemptsBeforeLockout
  nameWithType: UserManager<ApplicationUser, String>.MaxFailedAccessAttemptsBeforeLockout
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.MaxFailedAccessAttemptsBeforeLockout
  nameWithType.vb: UserManager(Of ApplicationUser, String).MaxFailedAccessAttemptsBeforeLockout
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).MaxFailedAccessAttemptsBeforeLockout
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.DefaultAccountLockoutTimeSpan
  commentId: P:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.DefaultAccountLockoutTimeSpan
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.DefaultAccountLockoutTimeSpan
  name: DefaultAccountLockoutTimeSpan
  nameWithType: UserManager<ApplicationUser, String>.DefaultAccountLockoutTimeSpan
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.DefaultAccountLockoutTimeSpan
  nameWithType.vb: UserManager(Of ApplicationUser, String).DefaultAccountLockoutTimeSpan
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).DefaultAccountLockoutTimeSpan
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SupportsUserTwoFactor
  commentId: P:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SupportsUserTwoFactor
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.SupportsUserTwoFactor
  name: SupportsUserTwoFactor
  nameWithType: UserManager<ApplicationUser, String>.SupportsUserTwoFactor
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.SupportsUserTwoFactor
  nameWithType.vb: UserManager(Of ApplicationUser, String).SupportsUserTwoFactor
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).SupportsUserTwoFactor
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SupportsUserPassword
  commentId: P:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SupportsUserPassword
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.SupportsUserPassword
  name: SupportsUserPassword
  nameWithType: UserManager<ApplicationUser, String>.SupportsUserPassword
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.SupportsUserPassword
  nameWithType.vb: UserManager(Of ApplicationUser, String).SupportsUserPassword
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).SupportsUserPassword
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SupportsUserSecurityStamp
  commentId: P:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SupportsUserSecurityStamp
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.SupportsUserSecurityStamp
  name: SupportsUserSecurityStamp
  nameWithType: UserManager<ApplicationUser, String>.SupportsUserSecurityStamp
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.SupportsUserSecurityStamp
  nameWithType.vb: UserManager(Of ApplicationUser, String).SupportsUserSecurityStamp
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).SupportsUserSecurityStamp
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SupportsUserRole
  commentId: P:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SupportsUserRole
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.SupportsUserRole
  name: SupportsUserRole
  nameWithType: UserManager<ApplicationUser, String>.SupportsUserRole
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.SupportsUserRole
  nameWithType.vb: UserManager(Of ApplicationUser, String).SupportsUserRole
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).SupportsUserRole
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SupportsUserLogin
  commentId: P:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SupportsUserLogin
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.SupportsUserLogin
  name: SupportsUserLogin
  nameWithType: UserManager<ApplicationUser, String>.SupportsUserLogin
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.SupportsUserLogin
  nameWithType.vb: UserManager(Of ApplicationUser, String).SupportsUserLogin
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).SupportsUserLogin
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SupportsUserEmail
  commentId: P:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SupportsUserEmail
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.SupportsUserEmail
  name: SupportsUserEmail
  nameWithType: UserManager<ApplicationUser, String>.SupportsUserEmail
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.SupportsUserEmail
  nameWithType.vb: UserManager(Of ApplicationUser, String).SupportsUserEmail
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).SupportsUserEmail
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SupportsUserPhoneNumber
  commentId: P:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SupportsUserPhoneNumber
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.SupportsUserPhoneNumber
  name: SupportsUserPhoneNumber
  nameWithType: UserManager<ApplicationUser, String>.SupportsUserPhoneNumber
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.SupportsUserPhoneNumber
  nameWithType.vb: UserManager(Of ApplicationUser, String).SupportsUserPhoneNumber
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).SupportsUserPhoneNumber
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SupportsUserClaim
  commentId: P:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SupportsUserClaim
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.SupportsUserClaim
  name: SupportsUserClaim
  nameWithType: UserManager<ApplicationUser, String>.SupportsUserClaim
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.SupportsUserClaim
  nameWithType.vb: UserManager(Of ApplicationUser, String).SupportsUserClaim
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).SupportsUserClaim
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SupportsUserLockout
  commentId: P:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SupportsUserLockout
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.SupportsUserLockout
  name: SupportsUserLockout
  nameWithType: UserManager<ApplicationUser, String>.SupportsUserLockout
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.SupportsUserLockout
  nameWithType.vb: UserManager(Of ApplicationUser, String).SupportsUserLockout
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).SupportsUserLockout
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SupportsQueryableUsers
  commentId: P:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.SupportsQueryableUsers
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.SupportsQueryableUsers
  name: SupportsQueryableUsers
  nameWithType: UserManager<ApplicationUser, String>.SupportsQueryableUsers
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.SupportsQueryableUsers
  nameWithType.vb: UserManager(Of ApplicationUser, String).SupportsQueryableUsers
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).SupportsQueryableUsers
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.Users
  commentId: P:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.Users
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.Users
  name: Users
  nameWithType: UserManager<ApplicationUser, String>.Users
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.Users
  nameWithType.vb: UserManager(Of ApplicationUser, String).Users
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).Users
- uid: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.TwoFactorProviders
  commentId: P:Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}.TwoFactorProviders
  parent: Microsoft.AspNet.Identity.UserManager{assignment_2_task_6.Models.ApplicationUser,System.String}
  definition: Microsoft.AspNet.Identity.UserManager`2.TwoFactorProviders
  name: TwoFactorProviders
  nameWithType: UserManager<ApplicationUser, String>.TwoFactorProviders
  fullName: Microsoft.AspNet.Identity.UserManager<assignment_2_task_6.Models.ApplicationUser, System.String>.TwoFactorProviders
  nameWithType.vb: UserManager(Of ApplicationUser, String).TwoFactorProviders
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of assignment_2_task_6.Models.ApplicationUser, System.String).TwoFactorProviders
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNet.Identity.UserManager`2
  commentId: T:Microsoft.AspNet.Identity.UserManager`2
  isExternal: true
  name: UserManager<TUser, TKey>
  nameWithType: UserManager<TUser, TKey>
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>
  nameWithType.vb: UserManager(Of TUser, TKey)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey)
  name.vb: UserManager(Of TUser, TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNet.Identity.UserManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNet.Identity.UserManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity
  commentId: N:Microsoft.AspNet.Identity
  isExternal: true
  name: Microsoft.AspNet.Identity
  nameWithType: Microsoft.AspNet.Identity
  fullName: Microsoft.AspNet.Identity
- uid: Microsoft.AspNet.Identity.UserManager`1
  commentId: T:Microsoft.AspNet.Identity.UserManager`1
  isExternal: true
  name: UserManager<TUser>
  nameWithType: UserManager<TUser>
  fullName: Microsoft.AspNet.Identity.UserManager<TUser>
  nameWithType.vb: UserManager(Of TUser)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser)
  name.vb: UserManager(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNet.Identity.UserManager
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`1
    name: UserManager
    nameWithType: UserManager
    fullName: Microsoft.AspNet.Identity.UserManager
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.Dispose
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.Dispose
  isExternal: true
  name: Dispose()
  nameWithType: UserManager<TUser, TKey>.Dispose()
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.Dispose()
  nameWithType.vb: UserManager(Of TUser, TKey).Dispose()
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).Dispose()
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.Dispose
    name: Dispose
    nameWithType: UserManager<TUser, TKey>.Dispose
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.Dispose
    name: Dispose
    nameWithType: UserManager(Of TUser, TKey).Dispose
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.CreateIdentityAsync(`0,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.CreateIdentityAsync(`0,System.String)
  isExternal: true
  name: CreateIdentityAsync(TUser, String)
  nameWithType: UserManager<TUser, TKey>.CreateIdentityAsync(TUser, String)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.CreateIdentityAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser, TKey).CreateIdentityAsync(TUser, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).CreateIdentityAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.CreateIdentityAsync(`0,System.String)
    name: CreateIdentityAsync
    nameWithType: UserManager<TUser, TKey>.CreateIdentityAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.CreateIdentityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.CreateIdentityAsync(`0,System.String)
    name: CreateIdentityAsync
    nameWithType: UserManager(Of TUser, TKey).CreateIdentityAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).CreateIdentityAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.CreateAsync(`0)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.CreateAsync(`0)
  isExternal: true
  name: CreateAsync(TUser)
  nameWithType: UserManager<TUser, TKey>.CreateAsync(TUser)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.CreateAsync(TUser)
  nameWithType.vb: UserManager(Of TUser, TKey).CreateAsync(TUser)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).CreateAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.CreateAsync(`0)
    name: CreateAsync
    nameWithType: UserManager<TUser, TKey>.CreateAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.CreateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.CreateAsync(`0)
    name: CreateAsync
    nameWithType: UserManager(Of TUser, TKey).CreateAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).CreateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.UpdateAsync(`0)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.UpdateAsync(`0)
  isExternal: true
  name: UpdateAsync(TUser)
  nameWithType: UserManager<TUser, TKey>.UpdateAsync(TUser)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.UpdateAsync(TUser)
  nameWithType.vb: UserManager(Of TUser, TKey).UpdateAsync(TUser)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).UpdateAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.UpdateAsync(`0)
    name: UpdateAsync
    nameWithType: UserManager<TUser, TKey>.UpdateAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.UpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.UpdateAsync(`0)
    name: UpdateAsync
    nameWithType: UserManager(Of TUser, TKey).UpdateAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).UpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.DeleteAsync(`0)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.DeleteAsync(`0)
  isExternal: true
  name: DeleteAsync(TUser)
  nameWithType: UserManager<TUser, TKey>.DeleteAsync(TUser)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.DeleteAsync(TUser)
  nameWithType.vb: UserManager(Of TUser, TKey).DeleteAsync(TUser)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).DeleteAsync(TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.DeleteAsync(`0)
    name: DeleteAsync
    nameWithType: UserManager<TUser, TKey>.DeleteAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.DeleteAsync(`0)
    name: DeleteAsync
    nameWithType: UserManager(Of TUser, TKey).DeleteAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.FindByIdAsync(`1)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.FindByIdAsync(`1)
  isExternal: true
  name: FindByIdAsync(TKey)
  nameWithType: UserManager<TUser, TKey>.FindByIdAsync(TKey)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.FindByIdAsync(TKey)
  nameWithType.vb: UserManager(Of TUser, TKey).FindByIdAsync(TKey)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).FindByIdAsync(TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.FindByIdAsync(`1)
    name: FindByIdAsync
    nameWithType: UserManager<TUser, TKey>.FindByIdAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.FindByIdAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.FindByIdAsync(`1)
    name: FindByIdAsync
    nameWithType: UserManager(Of TUser, TKey).FindByIdAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).FindByIdAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.FindByNameAsync(System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.FindByNameAsync(System.String)
  isExternal: true
  name: FindByNameAsync(String)
  nameWithType: UserManager<TUser, TKey>.FindByNameAsync(String)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.FindByNameAsync(System.String)
  nameWithType.vb: UserManager(Of TUser, TKey).FindByNameAsync(String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).FindByNameAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.FindByNameAsync(System.String)
    name: FindByNameAsync
    nameWithType: UserManager<TUser, TKey>.FindByNameAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.FindByNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.FindByNameAsync(System.String)
    name: FindByNameAsync
    nameWithType: UserManager(Of TUser, TKey).FindByNameAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).FindByNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.CreateAsync(`0,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.CreateAsync(`0,System.String)
  isExternal: true
  name: CreateAsync(TUser, String)
  nameWithType: UserManager<TUser, TKey>.CreateAsync(TUser, String)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.CreateAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser, TKey).CreateAsync(TUser, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).CreateAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.CreateAsync(`0,System.String)
    name: CreateAsync
    nameWithType: UserManager<TUser, TKey>.CreateAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.CreateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.CreateAsync(`0,System.String)
    name: CreateAsync
    nameWithType: UserManager(Of TUser, TKey).CreateAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).CreateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.FindAsync(System.String,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.FindAsync(System.String,System.String)
  isExternal: true
  name: FindAsync(String, String)
  nameWithType: UserManager<TUser, TKey>.FindAsync(String, String)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.FindAsync(System.String, System.String)
  nameWithType.vb: UserManager(Of TUser, TKey).FindAsync(String, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).FindAsync(System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.FindAsync(System.String,System.String)
    name: FindAsync
    nameWithType: UserManager<TUser, TKey>.FindAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.FindAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.FindAsync(System.String,System.String)
    name: FindAsync
    nameWithType: UserManager(Of TUser, TKey).FindAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).FindAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.CheckPasswordAsync(`0,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.CheckPasswordAsync(`0,System.String)
  isExternal: true
  name: CheckPasswordAsync(TUser, String)
  nameWithType: UserManager<TUser, TKey>.CheckPasswordAsync(TUser, String)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.CheckPasswordAsync(TUser, System.String)
  nameWithType.vb: UserManager(Of TUser, TKey).CheckPasswordAsync(TUser, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).CheckPasswordAsync(TUser, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.CheckPasswordAsync(`0,System.String)
    name: CheckPasswordAsync
    nameWithType: UserManager<TUser, TKey>.CheckPasswordAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.CheckPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.CheckPasswordAsync(`0,System.String)
    name: CheckPasswordAsync
    nameWithType: UserManager(Of TUser, TKey).CheckPasswordAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).CheckPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.HasPasswordAsync(`1)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.HasPasswordAsync(`1)
  isExternal: true
  name: HasPasswordAsync(TKey)
  nameWithType: UserManager<TUser, TKey>.HasPasswordAsync(TKey)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.HasPasswordAsync(TKey)
  nameWithType.vb: UserManager(Of TUser, TKey).HasPasswordAsync(TKey)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).HasPasswordAsync(TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.HasPasswordAsync(`1)
    name: HasPasswordAsync
    nameWithType: UserManager<TUser, TKey>.HasPasswordAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.HasPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.HasPasswordAsync(`1)
    name: HasPasswordAsync
    nameWithType: UserManager(Of TUser, TKey).HasPasswordAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).HasPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.AddPasswordAsync(`1,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.AddPasswordAsync(`1,System.String)
  isExternal: true
  name: AddPasswordAsync(TKey, String)
  nameWithType: UserManager<TUser, TKey>.AddPasswordAsync(TKey, String)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.AddPasswordAsync(TKey, System.String)
  nameWithType.vb: UserManager(Of TUser, TKey).AddPasswordAsync(TKey, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).AddPasswordAsync(TKey, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.AddPasswordAsync(`1,System.String)
    name: AddPasswordAsync
    nameWithType: UserManager<TUser, TKey>.AddPasswordAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.AddPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.AddPasswordAsync(`1,System.String)
    name: AddPasswordAsync
    nameWithType: UserManager(Of TUser, TKey).AddPasswordAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).AddPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.ChangePasswordAsync(`1,System.String,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.ChangePasswordAsync(`1,System.String,System.String)
  isExternal: true
  name: ChangePasswordAsync(TKey, String, String)
  nameWithType: UserManager<TUser, TKey>.ChangePasswordAsync(TKey, String, String)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.ChangePasswordAsync(TKey, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser, TKey).ChangePasswordAsync(TKey, String, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).ChangePasswordAsync(TKey, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.ChangePasswordAsync(`1,System.String,System.String)
    name: ChangePasswordAsync
    nameWithType: UserManager<TUser, TKey>.ChangePasswordAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.ChangePasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.ChangePasswordAsync(`1,System.String,System.String)
    name: ChangePasswordAsync
    nameWithType: UserManager(Of TUser, TKey).ChangePasswordAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).ChangePasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.RemovePasswordAsync(`1)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.RemovePasswordAsync(`1)
  isExternal: true
  name: RemovePasswordAsync(TKey)
  nameWithType: UserManager<TUser, TKey>.RemovePasswordAsync(TKey)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.RemovePasswordAsync(TKey)
  nameWithType.vb: UserManager(Of TUser, TKey).RemovePasswordAsync(TKey)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).RemovePasswordAsync(TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.RemovePasswordAsync(`1)
    name: RemovePasswordAsync
    nameWithType: UserManager<TUser, TKey>.RemovePasswordAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.RemovePasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.RemovePasswordAsync(`1)
    name: RemovePasswordAsync
    nameWithType: UserManager(Of TUser, TKey).RemovePasswordAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).RemovePasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.UpdatePassword(Microsoft.AspNet.Identity.IUserPasswordStore{`0,`1},`0,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.UpdatePassword(Microsoft.AspNet.Identity.IUserPasswordStore{`0,`1},`0,System.String)
  isExternal: true
  name: UpdatePassword(IUserPasswordStore<TUser, TKey>, TUser, String)
  nameWithType: UserManager<TUser, TKey>.UpdatePassword(IUserPasswordStore<TUser, TKey>, TUser, String)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.UpdatePassword(Microsoft.AspNet.Identity.IUserPasswordStore<TUser, TKey>, TUser, System.String)
  nameWithType.vb: UserManager(Of TUser, TKey).UpdatePassword(IUserPasswordStore(Of TUser, TKey), TUser, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).UpdatePassword(Microsoft.AspNet.Identity.IUserPasswordStore(Of TUser, TKey), TUser, System.String)
  name.vb: UpdatePassword(IUserPasswordStore(Of TUser, TKey), TUser, String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.UpdatePassword(Microsoft.AspNet.Identity.IUserPasswordStore{`0,`1},`0,System.String)
    name: UpdatePassword
    nameWithType: UserManager<TUser, TKey>.UpdatePassword
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.UpdatePassword
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNet.Identity.IUserPasswordStore`2
    name: IUserPasswordStore
    nameWithType: IUserPasswordStore
    fullName: Microsoft.AspNet.Identity.IUserPasswordStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.UpdatePassword(Microsoft.AspNet.Identity.IUserPasswordStore{`0,`1},`0,System.String)
    name: UpdatePassword
    nameWithType: UserManager(Of TUser, TKey).UpdatePassword
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).UpdatePassword
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNet.Identity.IUserPasswordStore`2
    name: IUserPasswordStore
    nameWithType: IUserPasswordStore
    fullName: Microsoft.AspNet.Identity.IUserPasswordStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.VerifyPasswordAsync(Microsoft.AspNet.Identity.IUserPasswordStore{`0,`1},`0,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.VerifyPasswordAsync(Microsoft.AspNet.Identity.IUserPasswordStore{`0,`1},`0,System.String)
  isExternal: true
  name: VerifyPasswordAsync(IUserPasswordStore<TUser, TKey>, TUser, String)
  nameWithType: UserManager<TUser, TKey>.VerifyPasswordAsync(IUserPasswordStore<TUser, TKey>, TUser, String)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.VerifyPasswordAsync(Microsoft.AspNet.Identity.IUserPasswordStore<TUser, TKey>, TUser, System.String)
  nameWithType.vb: UserManager(Of TUser, TKey).VerifyPasswordAsync(IUserPasswordStore(Of TUser, TKey), TUser, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).VerifyPasswordAsync(Microsoft.AspNet.Identity.IUserPasswordStore(Of TUser, TKey), TUser, System.String)
  name.vb: VerifyPasswordAsync(IUserPasswordStore(Of TUser, TKey), TUser, String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.VerifyPasswordAsync(Microsoft.AspNet.Identity.IUserPasswordStore{`0,`1},`0,System.String)
    name: VerifyPasswordAsync
    nameWithType: UserManager<TUser, TKey>.VerifyPasswordAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.VerifyPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNet.Identity.IUserPasswordStore`2
    name: IUserPasswordStore
    nameWithType: IUserPasswordStore
    fullName: Microsoft.AspNet.Identity.IUserPasswordStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.VerifyPasswordAsync(Microsoft.AspNet.Identity.IUserPasswordStore{`0,`1},`0,System.String)
    name: VerifyPasswordAsync
    nameWithType: UserManager(Of TUser, TKey).VerifyPasswordAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).VerifyPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNet.Identity.IUserPasswordStore`2
    name: IUserPasswordStore
    nameWithType: IUserPasswordStore
    fullName: Microsoft.AspNet.Identity.IUserPasswordStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.GetSecurityStampAsync(`1)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.GetSecurityStampAsync(`1)
  isExternal: true
  name: GetSecurityStampAsync(TKey)
  nameWithType: UserManager<TUser, TKey>.GetSecurityStampAsync(TKey)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GetSecurityStampAsync(TKey)
  nameWithType.vb: UserManager(Of TUser, TKey).GetSecurityStampAsync(TKey)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GetSecurityStampAsync(TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetSecurityStampAsync(`1)
    name: GetSecurityStampAsync
    nameWithType: UserManager<TUser, TKey>.GetSecurityStampAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GetSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetSecurityStampAsync(`1)
    name: GetSecurityStampAsync
    nameWithType: UserManager(Of TUser, TKey).GetSecurityStampAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GetSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.UpdateSecurityStampAsync(`1)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.UpdateSecurityStampAsync(`1)
  isExternal: true
  name: UpdateSecurityStampAsync(TKey)
  nameWithType: UserManager<TUser, TKey>.UpdateSecurityStampAsync(TKey)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.UpdateSecurityStampAsync(TKey)
  nameWithType.vb: UserManager(Of TUser, TKey).UpdateSecurityStampAsync(TKey)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).UpdateSecurityStampAsync(TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.UpdateSecurityStampAsync(`1)
    name: UpdateSecurityStampAsync
    nameWithType: UserManager<TUser, TKey>.UpdateSecurityStampAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.UpdateSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.UpdateSecurityStampAsync(`1)
    name: UpdateSecurityStampAsync
    nameWithType: UserManager(Of TUser, TKey).UpdateSecurityStampAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).UpdateSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.GeneratePasswordResetTokenAsync(`1)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.GeneratePasswordResetTokenAsync(`1)
  isExternal: true
  name: GeneratePasswordResetTokenAsync(TKey)
  nameWithType: UserManager<TUser, TKey>.GeneratePasswordResetTokenAsync(TKey)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GeneratePasswordResetTokenAsync(TKey)
  nameWithType.vb: UserManager(Of TUser, TKey).GeneratePasswordResetTokenAsync(TKey)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GeneratePasswordResetTokenAsync(TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GeneratePasswordResetTokenAsync(`1)
    name: GeneratePasswordResetTokenAsync
    nameWithType: UserManager<TUser, TKey>.GeneratePasswordResetTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GeneratePasswordResetTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GeneratePasswordResetTokenAsync(`1)
    name: GeneratePasswordResetTokenAsync
    nameWithType: UserManager(Of TUser, TKey).GeneratePasswordResetTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GeneratePasswordResetTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.ResetPasswordAsync(`1,System.String,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.ResetPasswordAsync(`1,System.String,System.String)
  isExternal: true
  name: ResetPasswordAsync(TKey, String, String)
  nameWithType: UserManager<TUser, TKey>.ResetPasswordAsync(TKey, String, String)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.ResetPasswordAsync(TKey, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser, TKey).ResetPasswordAsync(TKey, String, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).ResetPasswordAsync(TKey, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.ResetPasswordAsync(`1,System.String,System.String)
    name: ResetPasswordAsync
    nameWithType: UserManager<TUser, TKey>.ResetPasswordAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.ResetPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.ResetPasswordAsync(`1,System.String,System.String)
    name: ResetPasswordAsync
    nameWithType: UserManager(Of TUser, TKey).ResetPasswordAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).ResetPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
  isExternal: true
  name: FindAsync(UserLoginInfo)
  nameWithType: UserManager<TUser, TKey>.FindAsync(UserLoginInfo)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
  nameWithType.vb: UserManager(Of TUser, TKey).FindAsync(UserLoginInfo)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
    name: FindAsync
    nameWithType: UserManager<TUser, TKey>.FindAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.FindAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNet.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNet.Identity.UserLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.FindAsync(Microsoft.AspNet.Identity.UserLoginInfo)
    name: FindAsync
    nameWithType: UserManager(Of TUser, TKey).FindAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).FindAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Microsoft.AspNet.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNet.Identity.UserLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.RemoveLoginAsync(`1,Microsoft.AspNet.Identity.UserLoginInfo)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.RemoveLoginAsync(`1,Microsoft.AspNet.Identity.UserLoginInfo)
  isExternal: true
  name: RemoveLoginAsync(TKey, UserLoginInfo)
  nameWithType: UserManager<TUser, TKey>.RemoveLoginAsync(TKey, UserLoginInfo)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.RemoveLoginAsync(TKey, Microsoft.AspNet.Identity.UserLoginInfo)
  nameWithType.vb: UserManager(Of TUser, TKey).RemoveLoginAsync(TKey, UserLoginInfo)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).RemoveLoginAsync(TKey, Microsoft.AspNet.Identity.UserLoginInfo)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.RemoveLoginAsync(`1,Microsoft.AspNet.Identity.UserLoginInfo)
    name: RemoveLoginAsync
    nameWithType: UserManager<TUser, TKey>.RemoveLoginAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.RemoveLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNet.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNet.Identity.UserLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.RemoveLoginAsync(`1,Microsoft.AspNet.Identity.UserLoginInfo)
    name: RemoveLoginAsync
    nameWithType: UserManager(Of TUser, TKey).RemoveLoginAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).RemoveLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNet.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNet.Identity.UserLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.AddLoginAsync(`1,Microsoft.AspNet.Identity.UserLoginInfo)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.AddLoginAsync(`1,Microsoft.AspNet.Identity.UserLoginInfo)
  isExternal: true
  name: AddLoginAsync(TKey, UserLoginInfo)
  nameWithType: UserManager<TUser, TKey>.AddLoginAsync(TKey, UserLoginInfo)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.AddLoginAsync(TKey, Microsoft.AspNet.Identity.UserLoginInfo)
  nameWithType.vb: UserManager(Of TUser, TKey).AddLoginAsync(TKey, UserLoginInfo)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).AddLoginAsync(TKey, Microsoft.AspNet.Identity.UserLoginInfo)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.AddLoginAsync(`1,Microsoft.AspNet.Identity.UserLoginInfo)
    name: AddLoginAsync
    nameWithType: UserManager<TUser, TKey>.AddLoginAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.AddLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNet.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNet.Identity.UserLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.AddLoginAsync(`1,Microsoft.AspNet.Identity.UserLoginInfo)
    name: AddLoginAsync
    nameWithType: UserManager(Of TUser, TKey).AddLoginAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).AddLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNet.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNet.Identity.UserLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.GetLoginsAsync(`1)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.GetLoginsAsync(`1)
  isExternal: true
  name: GetLoginsAsync(TKey)
  nameWithType: UserManager<TUser, TKey>.GetLoginsAsync(TKey)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GetLoginsAsync(TKey)
  nameWithType.vb: UserManager(Of TUser, TKey).GetLoginsAsync(TKey)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GetLoginsAsync(TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetLoginsAsync(`1)
    name: GetLoginsAsync
    nameWithType: UserManager<TUser, TKey>.GetLoginsAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GetLoginsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetLoginsAsync(`1)
    name: GetLoginsAsync
    nameWithType: UserManager(Of TUser, TKey).GetLoginsAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GetLoginsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.AddClaimAsync(`1,System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.AddClaimAsync(`1,System.Security.Claims.Claim)
  isExternal: true
  name: AddClaimAsync(TKey, Claim)
  nameWithType: UserManager<TUser, TKey>.AddClaimAsync(TKey, Claim)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.AddClaimAsync(TKey, System.Security.Claims.Claim)
  nameWithType.vb: UserManager(Of TUser, TKey).AddClaimAsync(TKey, Claim)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).AddClaimAsync(TKey, System.Security.Claims.Claim)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.AddClaimAsync(`1,System.Security.Claims.Claim)
    name: AddClaimAsync
    nameWithType: UserManager<TUser, TKey>.AddClaimAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.AddClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.AddClaimAsync(`1,System.Security.Claims.Claim)
    name: AddClaimAsync
    nameWithType: UserManager(Of TUser, TKey).AddClaimAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).AddClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.RemoveClaimAsync(`1,System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.RemoveClaimAsync(`1,System.Security.Claims.Claim)
  isExternal: true
  name: RemoveClaimAsync(TKey, Claim)
  nameWithType: UserManager<TUser, TKey>.RemoveClaimAsync(TKey, Claim)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.RemoveClaimAsync(TKey, System.Security.Claims.Claim)
  nameWithType.vb: UserManager(Of TUser, TKey).RemoveClaimAsync(TKey, Claim)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).RemoveClaimAsync(TKey, System.Security.Claims.Claim)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.RemoveClaimAsync(`1,System.Security.Claims.Claim)
    name: RemoveClaimAsync
    nameWithType: UserManager<TUser, TKey>.RemoveClaimAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.RemoveClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.RemoveClaimAsync(`1,System.Security.Claims.Claim)
    name: RemoveClaimAsync
    nameWithType: UserManager(Of TUser, TKey).RemoveClaimAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).RemoveClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.GetClaimsAsync(`1)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.GetClaimsAsync(`1)
  isExternal: true
  name: GetClaimsAsync(TKey)
  nameWithType: UserManager<TUser, TKey>.GetClaimsAsync(TKey)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GetClaimsAsync(TKey)
  nameWithType.vb: UserManager(Of TUser, TKey).GetClaimsAsync(TKey)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GetClaimsAsync(TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetClaimsAsync(`1)
    name: GetClaimsAsync
    nameWithType: UserManager<TUser, TKey>.GetClaimsAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GetClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetClaimsAsync(`1)
    name: GetClaimsAsync
    nameWithType: UserManager(Of TUser, TKey).GetClaimsAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GetClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.AddToRoleAsync(`1,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.AddToRoleAsync(`1,System.String)
  isExternal: true
  name: AddToRoleAsync(TKey, String)
  nameWithType: UserManager<TUser, TKey>.AddToRoleAsync(TKey, String)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.AddToRoleAsync(TKey, System.String)
  nameWithType.vb: UserManager(Of TUser, TKey).AddToRoleAsync(TKey, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).AddToRoleAsync(TKey, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.AddToRoleAsync(`1,System.String)
    name: AddToRoleAsync
    nameWithType: UserManager<TUser, TKey>.AddToRoleAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.AddToRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.AddToRoleAsync(`1,System.String)
    name: AddToRoleAsync
    nameWithType: UserManager(Of TUser, TKey).AddToRoleAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).AddToRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.AddToRolesAsync(`1,System.String[])
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.AddToRolesAsync(`1,System.String[])
  isExternal: true
  name: AddToRolesAsync(TKey, String[])
  nameWithType: UserManager<TUser, TKey>.AddToRolesAsync(TKey, String[])
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.AddToRolesAsync(TKey, System.String[])
  nameWithType.vb: UserManager(Of TUser, TKey).AddToRolesAsync(TKey, String())
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).AddToRolesAsync(TKey, System.String())
  name.vb: AddToRolesAsync(TKey, String())
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.AddToRolesAsync(`1,System.String[])
    name: AddToRolesAsync
    nameWithType: UserManager<TUser, TKey>.AddToRolesAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.AddToRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.AddToRolesAsync(`1,System.String[])
    name: AddToRolesAsync
    nameWithType: UserManager(Of TUser, TKey).AddToRolesAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).AddToRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.RemoveFromRolesAsync(`1,System.String[])
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.RemoveFromRolesAsync(`1,System.String[])
  isExternal: true
  name: RemoveFromRolesAsync(TKey, String[])
  nameWithType: UserManager<TUser, TKey>.RemoveFromRolesAsync(TKey, String[])
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.RemoveFromRolesAsync(TKey, System.String[])
  nameWithType.vb: UserManager(Of TUser, TKey).RemoveFromRolesAsync(TKey, String())
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).RemoveFromRolesAsync(TKey, System.String())
  name.vb: RemoveFromRolesAsync(TKey, String())
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.RemoveFromRolesAsync(`1,System.String[])
    name: RemoveFromRolesAsync
    nameWithType: UserManager<TUser, TKey>.RemoveFromRolesAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.RemoveFromRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.RemoveFromRolesAsync(`1,System.String[])
    name: RemoveFromRolesAsync
    nameWithType: UserManager(Of TUser, TKey).RemoveFromRolesAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).RemoveFromRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.RemoveFromRoleAsync(`1,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.RemoveFromRoleAsync(`1,System.String)
  isExternal: true
  name: RemoveFromRoleAsync(TKey, String)
  nameWithType: UserManager<TUser, TKey>.RemoveFromRoleAsync(TKey, String)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.RemoveFromRoleAsync(TKey, System.String)
  nameWithType.vb: UserManager(Of TUser, TKey).RemoveFromRoleAsync(TKey, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).RemoveFromRoleAsync(TKey, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.RemoveFromRoleAsync(`1,System.String)
    name: RemoveFromRoleAsync
    nameWithType: UserManager<TUser, TKey>.RemoveFromRoleAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.RemoveFromRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.RemoveFromRoleAsync(`1,System.String)
    name: RemoveFromRoleAsync
    nameWithType: UserManager(Of TUser, TKey).RemoveFromRoleAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).RemoveFromRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.GetRolesAsync(`1)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.GetRolesAsync(`1)
  isExternal: true
  name: GetRolesAsync(TKey)
  nameWithType: UserManager<TUser, TKey>.GetRolesAsync(TKey)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GetRolesAsync(TKey)
  nameWithType.vb: UserManager(Of TUser, TKey).GetRolesAsync(TKey)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GetRolesAsync(TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetRolesAsync(`1)
    name: GetRolesAsync
    nameWithType: UserManager<TUser, TKey>.GetRolesAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GetRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetRolesAsync(`1)
    name: GetRolesAsync
    nameWithType: UserManager(Of TUser, TKey).GetRolesAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GetRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.IsInRoleAsync(`1,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.IsInRoleAsync(`1,System.String)
  isExternal: true
  name: IsInRoleAsync(TKey, String)
  nameWithType: UserManager<TUser, TKey>.IsInRoleAsync(TKey, String)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.IsInRoleAsync(TKey, System.String)
  nameWithType.vb: UserManager(Of TUser, TKey).IsInRoleAsync(TKey, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).IsInRoleAsync(TKey, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.IsInRoleAsync(`1,System.String)
    name: IsInRoleAsync
    nameWithType: UserManager<TUser, TKey>.IsInRoleAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.IsInRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.IsInRoleAsync(`1,System.String)
    name: IsInRoleAsync
    nameWithType: UserManager(Of TUser, TKey).IsInRoleAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).IsInRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.GetEmailAsync(`1)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.GetEmailAsync(`1)
  isExternal: true
  name: GetEmailAsync(TKey)
  nameWithType: UserManager<TUser, TKey>.GetEmailAsync(TKey)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GetEmailAsync(TKey)
  nameWithType.vb: UserManager(Of TUser, TKey).GetEmailAsync(TKey)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GetEmailAsync(TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetEmailAsync(`1)
    name: GetEmailAsync
    nameWithType: UserManager<TUser, TKey>.GetEmailAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GetEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetEmailAsync(`1)
    name: GetEmailAsync
    nameWithType: UserManager(Of TUser, TKey).GetEmailAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GetEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.SetEmailAsync(`1,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.SetEmailAsync(`1,System.String)
  isExternal: true
  name: SetEmailAsync(TKey, String)
  nameWithType: UserManager<TUser, TKey>.SetEmailAsync(TKey, String)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SetEmailAsync(TKey, System.String)
  nameWithType.vb: UserManager(Of TUser, TKey).SetEmailAsync(TKey, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SetEmailAsync(TKey, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.SetEmailAsync(`1,System.String)
    name: SetEmailAsync
    nameWithType: UserManager<TUser, TKey>.SetEmailAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SetEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.SetEmailAsync(`1,System.String)
    name: SetEmailAsync
    nameWithType: UserManager(Of TUser, TKey).SetEmailAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SetEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.FindByEmailAsync(System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.FindByEmailAsync(System.String)
  isExternal: true
  name: FindByEmailAsync(String)
  nameWithType: UserManager<TUser, TKey>.FindByEmailAsync(String)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.FindByEmailAsync(System.String)
  nameWithType.vb: UserManager(Of TUser, TKey).FindByEmailAsync(String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).FindByEmailAsync(System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.FindByEmailAsync(System.String)
    name: FindByEmailAsync
    nameWithType: UserManager<TUser, TKey>.FindByEmailAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.FindByEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.FindByEmailAsync(System.String)
    name: FindByEmailAsync
    nameWithType: UserManager(Of TUser, TKey).FindByEmailAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).FindByEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.GenerateEmailConfirmationTokenAsync(`1)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.GenerateEmailConfirmationTokenAsync(`1)
  isExternal: true
  name: GenerateEmailConfirmationTokenAsync(TKey)
  nameWithType: UserManager<TUser, TKey>.GenerateEmailConfirmationTokenAsync(TKey)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GenerateEmailConfirmationTokenAsync(TKey)
  nameWithType.vb: UserManager(Of TUser, TKey).GenerateEmailConfirmationTokenAsync(TKey)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GenerateEmailConfirmationTokenAsync(TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GenerateEmailConfirmationTokenAsync(`1)
    name: GenerateEmailConfirmationTokenAsync
    nameWithType: UserManager<TUser, TKey>.GenerateEmailConfirmationTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GenerateEmailConfirmationTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GenerateEmailConfirmationTokenAsync(`1)
    name: GenerateEmailConfirmationTokenAsync
    nameWithType: UserManager(Of TUser, TKey).GenerateEmailConfirmationTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GenerateEmailConfirmationTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.ConfirmEmailAsync(`1,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.ConfirmEmailAsync(`1,System.String)
  isExternal: true
  name: ConfirmEmailAsync(TKey, String)
  nameWithType: UserManager<TUser, TKey>.ConfirmEmailAsync(TKey, String)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.ConfirmEmailAsync(TKey, System.String)
  nameWithType.vb: UserManager(Of TUser, TKey).ConfirmEmailAsync(TKey, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).ConfirmEmailAsync(TKey, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.ConfirmEmailAsync(`1,System.String)
    name: ConfirmEmailAsync
    nameWithType: UserManager<TUser, TKey>.ConfirmEmailAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.ConfirmEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.ConfirmEmailAsync(`1,System.String)
    name: ConfirmEmailAsync
    nameWithType: UserManager(Of TUser, TKey).ConfirmEmailAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).ConfirmEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.IsEmailConfirmedAsync(`1)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.IsEmailConfirmedAsync(`1)
  isExternal: true
  name: IsEmailConfirmedAsync(TKey)
  nameWithType: UserManager<TUser, TKey>.IsEmailConfirmedAsync(TKey)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.IsEmailConfirmedAsync(TKey)
  nameWithType.vb: UserManager(Of TUser, TKey).IsEmailConfirmedAsync(TKey)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).IsEmailConfirmedAsync(TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.IsEmailConfirmedAsync(`1)
    name: IsEmailConfirmedAsync
    nameWithType: UserManager<TUser, TKey>.IsEmailConfirmedAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.IsEmailConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.IsEmailConfirmedAsync(`1)
    name: IsEmailConfirmedAsync
    nameWithType: UserManager(Of TUser, TKey).IsEmailConfirmedAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).IsEmailConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.GetPhoneNumberAsync(`1)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.GetPhoneNumberAsync(`1)
  isExternal: true
  name: GetPhoneNumberAsync(TKey)
  nameWithType: UserManager<TUser, TKey>.GetPhoneNumberAsync(TKey)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GetPhoneNumberAsync(TKey)
  nameWithType.vb: UserManager(Of TUser, TKey).GetPhoneNumberAsync(TKey)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GetPhoneNumberAsync(TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetPhoneNumberAsync(`1)
    name: GetPhoneNumberAsync
    nameWithType: UserManager<TUser, TKey>.GetPhoneNumberAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GetPhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetPhoneNumberAsync(`1)
    name: GetPhoneNumberAsync
    nameWithType: UserManager(Of TUser, TKey).GetPhoneNumberAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GetPhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.SetPhoneNumberAsync(`1,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.SetPhoneNumberAsync(`1,System.String)
  isExternal: true
  name: SetPhoneNumberAsync(TKey, String)
  nameWithType: UserManager<TUser, TKey>.SetPhoneNumberAsync(TKey, String)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SetPhoneNumberAsync(TKey, System.String)
  nameWithType.vb: UserManager(Of TUser, TKey).SetPhoneNumberAsync(TKey, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SetPhoneNumberAsync(TKey, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.SetPhoneNumberAsync(`1,System.String)
    name: SetPhoneNumberAsync
    nameWithType: UserManager<TUser, TKey>.SetPhoneNumberAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SetPhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.SetPhoneNumberAsync(`1,System.String)
    name: SetPhoneNumberAsync
    nameWithType: UserManager(Of TUser, TKey).SetPhoneNumberAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SetPhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.ChangePhoneNumberAsync(`1,System.String,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.ChangePhoneNumberAsync(`1,System.String,System.String)
  isExternal: true
  name: ChangePhoneNumberAsync(TKey, String, String)
  nameWithType: UserManager<TUser, TKey>.ChangePhoneNumberAsync(TKey, String, String)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.ChangePhoneNumberAsync(TKey, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser, TKey).ChangePhoneNumberAsync(TKey, String, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).ChangePhoneNumberAsync(TKey, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.ChangePhoneNumberAsync(`1,System.String,System.String)
    name: ChangePhoneNumberAsync
    nameWithType: UserManager<TUser, TKey>.ChangePhoneNumberAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.ChangePhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.ChangePhoneNumberAsync(`1,System.String,System.String)
    name: ChangePhoneNumberAsync
    nameWithType: UserManager(Of TUser, TKey).ChangePhoneNumberAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).ChangePhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.IsPhoneNumberConfirmedAsync(`1)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.IsPhoneNumberConfirmedAsync(`1)
  isExternal: true
  name: IsPhoneNumberConfirmedAsync(TKey)
  nameWithType: UserManager<TUser, TKey>.IsPhoneNumberConfirmedAsync(TKey)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.IsPhoneNumberConfirmedAsync(TKey)
  nameWithType.vb: UserManager(Of TUser, TKey).IsPhoneNumberConfirmedAsync(TKey)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).IsPhoneNumberConfirmedAsync(TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.IsPhoneNumberConfirmedAsync(`1)
    name: IsPhoneNumberConfirmedAsync
    nameWithType: UserManager<TUser, TKey>.IsPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.IsPhoneNumberConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.IsPhoneNumberConfirmedAsync(`1)
    name: IsPhoneNumberConfirmedAsync
    nameWithType: UserManager(Of TUser, TKey).IsPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).IsPhoneNumberConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.GenerateChangePhoneNumberTokenAsync(`1,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.GenerateChangePhoneNumberTokenAsync(`1,System.String)
  isExternal: true
  name: GenerateChangePhoneNumberTokenAsync(TKey, String)
  nameWithType: UserManager<TUser, TKey>.GenerateChangePhoneNumberTokenAsync(TKey, String)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GenerateChangePhoneNumberTokenAsync(TKey, System.String)
  nameWithType.vb: UserManager(Of TUser, TKey).GenerateChangePhoneNumberTokenAsync(TKey, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GenerateChangePhoneNumberTokenAsync(TKey, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GenerateChangePhoneNumberTokenAsync(`1,System.String)
    name: GenerateChangePhoneNumberTokenAsync
    nameWithType: UserManager<TUser, TKey>.GenerateChangePhoneNumberTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GenerateChangePhoneNumberTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GenerateChangePhoneNumberTokenAsync(`1,System.String)
    name: GenerateChangePhoneNumberTokenAsync
    nameWithType: UserManager(Of TUser, TKey).GenerateChangePhoneNumberTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GenerateChangePhoneNumberTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.VerifyChangePhoneNumberTokenAsync(`1,System.String,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.VerifyChangePhoneNumberTokenAsync(`1,System.String,System.String)
  isExternal: true
  name: VerifyChangePhoneNumberTokenAsync(TKey, String, String)
  nameWithType: UserManager<TUser, TKey>.VerifyChangePhoneNumberTokenAsync(TKey, String, String)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.VerifyChangePhoneNumberTokenAsync(TKey, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser, TKey).VerifyChangePhoneNumberTokenAsync(TKey, String, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).VerifyChangePhoneNumberTokenAsync(TKey, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.VerifyChangePhoneNumberTokenAsync(`1,System.String,System.String)
    name: VerifyChangePhoneNumberTokenAsync
    nameWithType: UserManager<TUser, TKey>.VerifyChangePhoneNumberTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.VerifyChangePhoneNumberTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.VerifyChangePhoneNumberTokenAsync(`1,System.String,System.String)
    name: VerifyChangePhoneNumberTokenAsync
    nameWithType: UserManager(Of TUser, TKey).VerifyChangePhoneNumberTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).VerifyChangePhoneNumberTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.VerifyUserTokenAsync(`1,System.String,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.VerifyUserTokenAsync(`1,System.String,System.String)
  isExternal: true
  name: VerifyUserTokenAsync(TKey, String, String)
  nameWithType: UserManager<TUser, TKey>.VerifyUserTokenAsync(TKey, String, String)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.VerifyUserTokenAsync(TKey, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser, TKey).VerifyUserTokenAsync(TKey, String, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).VerifyUserTokenAsync(TKey, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.VerifyUserTokenAsync(`1,System.String,System.String)
    name: VerifyUserTokenAsync
    nameWithType: UserManager<TUser, TKey>.VerifyUserTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.VerifyUserTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.VerifyUserTokenAsync(`1,System.String,System.String)
    name: VerifyUserTokenAsync
    nameWithType: UserManager(Of TUser, TKey).VerifyUserTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).VerifyUserTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.GenerateUserTokenAsync(System.String,`1)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.GenerateUserTokenAsync(System.String,`1)
  isExternal: true
  name: GenerateUserTokenAsync(String, TKey)
  nameWithType: UserManager<TUser, TKey>.GenerateUserTokenAsync(String, TKey)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GenerateUserTokenAsync(System.String, TKey)
  nameWithType.vb: UserManager(Of TUser, TKey).GenerateUserTokenAsync(String, TKey)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GenerateUserTokenAsync(System.String, TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GenerateUserTokenAsync(System.String,`1)
    name: GenerateUserTokenAsync
    nameWithType: UserManager<TUser, TKey>.GenerateUserTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GenerateUserTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GenerateUserTokenAsync(System.String,`1)
    name: GenerateUserTokenAsync
    nameWithType: UserManager(Of TUser, TKey).GenerateUserTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GenerateUserTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.RegisterTwoFactorProvider(System.String,Microsoft.AspNet.Identity.IUserTokenProvider{`0,`1})
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.RegisterTwoFactorProvider(System.String,Microsoft.AspNet.Identity.IUserTokenProvider{`0,`1})
  isExternal: true
  name: RegisterTwoFactorProvider(String, IUserTokenProvider<TUser, TKey>)
  nameWithType: UserManager<TUser, TKey>.RegisterTwoFactorProvider(String, IUserTokenProvider<TUser, TKey>)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.RegisterTwoFactorProvider(System.String, Microsoft.AspNet.Identity.IUserTokenProvider<TUser, TKey>)
  nameWithType.vb: UserManager(Of TUser, TKey).RegisterTwoFactorProvider(String, IUserTokenProvider(Of TUser, TKey))
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).RegisterTwoFactorProvider(System.String, Microsoft.AspNet.Identity.IUserTokenProvider(Of TUser, TKey))
  name.vb: RegisterTwoFactorProvider(String, IUserTokenProvider(Of TUser, TKey))
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.RegisterTwoFactorProvider(System.String,Microsoft.AspNet.Identity.IUserTokenProvider{`0,`1})
    name: RegisterTwoFactorProvider
    nameWithType: UserManager<TUser, TKey>.RegisterTwoFactorProvider
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.RegisterTwoFactorProvider
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNet.Identity.IUserTokenProvider`2
    name: IUserTokenProvider
    nameWithType: IUserTokenProvider
    fullName: Microsoft.AspNet.Identity.IUserTokenProvider
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.RegisterTwoFactorProvider(System.String,Microsoft.AspNet.Identity.IUserTokenProvider{`0,`1})
    name: RegisterTwoFactorProvider
    nameWithType: UserManager(Of TUser, TKey).RegisterTwoFactorProvider
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).RegisterTwoFactorProvider
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNet.Identity.IUserTokenProvider`2
    name: IUserTokenProvider
    nameWithType: IUserTokenProvider
    fullName: Microsoft.AspNet.Identity.IUserTokenProvider
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.GetValidTwoFactorProvidersAsync(`1)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.GetValidTwoFactorProvidersAsync(`1)
  isExternal: true
  name: GetValidTwoFactorProvidersAsync(TKey)
  nameWithType: UserManager<TUser, TKey>.GetValidTwoFactorProvidersAsync(TKey)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GetValidTwoFactorProvidersAsync(TKey)
  nameWithType.vb: UserManager(Of TUser, TKey).GetValidTwoFactorProvidersAsync(TKey)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GetValidTwoFactorProvidersAsync(TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetValidTwoFactorProvidersAsync(`1)
    name: GetValidTwoFactorProvidersAsync
    nameWithType: UserManager<TUser, TKey>.GetValidTwoFactorProvidersAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GetValidTwoFactorProvidersAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetValidTwoFactorProvidersAsync(`1)
    name: GetValidTwoFactorProvidersAsync
    nameWithType: UserManager(Of TUser, TKey).GetValidTwoFactorProvidersAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GetValidTwoFactorProvidersAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.VerifyTwoFactorTokenAsync(`1,System.String,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.VerifyTwoFactorTokenAsync(`1,System.String,System.String)
  isExternal: true
  name: VerifyTwoFactorTokenAsync(TKey, String, String)
  nameWithType: UserManager<TUser, TKey>.VerifyTwoFactorTokenAsync(TKey, String, String)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.VerifyTwoFactorTokenAsync(TKey, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser, TKey).VerifyTwoFactorTokenAsync(TKey, String, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).VerifyTwoFactorTokenAsync(TKey, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.VerifyTwoFactorTokenAsync(`1,System.String,System.String)
    name: VerifyTwoFactorTokenAsync
    nameWithType: UserManager<TUser, TKey>.VerifyTwoFactorTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.VerifyTwoFactorTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.VerifyTwoFactorTokenAsync(`1,System.String,System.String)
    name: VerifyTwoFactorTokenAsync
    nameWithType: UserManager(Of TUser, TKey).VerifyTwoFactorTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).VerifyTwoFactorTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.GenerateTwoFactorTokenAsync(`1,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.GenerateTwoFactorTokenAsync(`1,System.String)
  isExternal: true
  name: GenerateTwoFactorTokenAsync(TKey, String)
  nameWithType: UserManager<TUser, TKey>.GenerateTwoFactorTokenAsync(TKey, String)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GenerateTwoFactorTokenAsync(TKey, System.String)
  nameWithType.vb: UserManager(Of TUser, TKey).GenerateTwoFactorTokenAsync(TKey, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GenerateTwoFactorTokenAsync(TKey, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GenerateTwoFactorTokenAsync(`1,System.String)
    name: GenerateTwoFactorTokenAsync
    nameWithType: UserManager<TUser, TKey>.GenerateTwoFactorTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GenerateTwoFactorTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GenerateTwoFactorTokenAsync(`1,System.String)
    name: GenerateTwoFactorTokenAsync
    nameWithType: UserManager(Of TUser, TKey).GenerateTwoFactorTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GenerateTwoFactorTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.NotifyTwoFactorTokenAsync(`1,System.String,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.NotifyTwoFactorTokenAsync(`1,System.String,System.String)
  isExternal: true
  name: NotifyTwoFactorTokenAsync(TKey, String, String)
  nameWithType: UserManager<TUser, TKey>.NotifyTwoFactorTokenAsync(TKey, String, String)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.NotifyTwoFactorTokenAsync(TKey, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser, TKey).NotifyTwoFactorTokenAsync(TKey, String, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).NotifyTwoFactorTokenAsync(TKey, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.NotifyTwoFactorTokenAsync(`1,System.String,System.String)
    name: NotifyTwoFactorTokenAsync
    nameWithType: UserManager<TUser, TKey>.NotifyTwoFactorTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.NotifyTwoFactorTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.NotifyTwoFactorTokenAsync(`1,System.String,System.String)
    name: NotifyTwoFactorTokenAsync
    nameWithType: UserManager(Of TUser, TKey).NotifyTwoFactorTokenAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).NotifyTwoFactorTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.GetTwoFactorEnabledAsync(`1)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.GetTwoFactorEnabledAsync(`1)
  isExternal: true
  name: GetTwoFactorEnabledAsync(TKey)
  nameWithType: UserManager<TUser, TKey>.GetTwoFactorEnabledAsync(TKey)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GetTwoFactorEnabledAsync(TKey)
  nameWithType.vb: UserManager(Of TUser, TKey).GetTwoFactorEnabledAsync(TKey)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GetTwoFactorEnabledAsync(TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetTwoFactorEnabledAsync(`1)
    name: GetTwoFactorEnabledAsync
    nameWithType: UserManager<TUser, TKey>.GetTwoFactorEnabledAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GetTwoFactorEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetTwoFactorEnabledAsync(`1)
    name: GetTwoFactorEnabledAsync
    nameWithType: UserManager(Of TUser, TKey).GetTwoFactorEnabledAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GetTwoFactorEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.SetTwoFactorEnabledAsync(`1,System.Boolean)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.SetTwoFactorEnabledAsync(`1,System.Boolean)
  isExternal: true
  name: SetTwoFactorEnabledAsync(TKey, Boolean)
  nameWithType: UserManager<TUser, TKey>.SetTwoFactorEnabledAsync(TKey, Boolean)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SetTwoFactorEnabledAsync(TKey, System.Boolean)
  nameWithType.vb: UserManager(Of TUser, TKey).SetTwoFactorEnabledAsync(TKey, Boolean)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SetTwoFactorEnabledAsync(TKey, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.SetTwoFactorEnabledAsync(`1,System.Boolean)
    name: SetTwoFactorEnabledAsync
    nameWithType: UserManager<TUser, TKey>.SetTwoFactorEnabledAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SetTwoFactorEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.SetTwoFactorEnabledAsync(`1,System.Boolean)
    name: SetTwoFactorEnabledAsync
    nameWithType: UserManager(Of TUser, TKey).SetTwoFactorEnabledAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SetTwoFactorEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.SendEmailAsync(`1,System.String,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.SendEmailAsync(`1,System.String,System.String)
  isExternal: true
  name: SendEmailAsync(TKey, String, String)
  nameWithType: UserManager<TUser, TKey>.SendEmailAsync(TKey, String, String)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SendEmailAsync(TKey, System.String, System.String)
  nameWithType.vb: UserManager(Of TUser, TKey).SendEmailAsync(TKey, String, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SendEmailAsync(TKey, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.SendEmailAsync(`1,System.String,System.String)
    name: SendEmailAsync
    nameWithType: UserManager<TUser, TKey>.SendEmailAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SendEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.SendEmailAsync(`1,System.String,System.String)
    name: SendEmailAsync
    nameWithType: UserManager(Of TUser, TKey).SendEmailAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SendEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.SendSmsAsync(`1,System.String)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.SendSmsAsync(`1,System.String)
  isExternal: true
  name: SendSmsAsync(TKey, String)
  nameWithType: UserManager<TUser, TKey>.SendSmsAsync(TKey, String)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SendSmsAsync(TKey, System.String)
  nameWithType.vb: UserManager(Of TUser, TKey).SendSmsAsync(TKey, String)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SendSmsAsync(TKey, System.String)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.SendSmsAsync(`1,System.String)
    name: SendSmsAsync
    nameWithType: UserManager<TUser, TKey>.SendSmsAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SendSmsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.SendSmsAsync(`1,System.String)
    name: SendSmsAsync
    nameWithType: UserManager(Of TUser, TKey).SendSmsAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SendSmsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.IsLockedOutAsync(`1)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.IsLockedOutAsync(`1)
  isExternal: true
  name: IsLockedOutAsync(TKey)
  nameWithType: UserManager<TUser, TKey>.IsLockedOutAsync(TKey)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.IsLockedOutAsync(TKey)
  nameWithType.vb: UserManager(Of TUser, TKey).IsLockedOutAsync(TKey)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).IsLockedOutAsync(TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.IsLockedOutAsync(`1)
    name: IsLockedOutAsync
    nameWithType: UserManager<TUser, TKey>.IsLockedOutAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.IsLockedOutAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.IsLockedOutAsync(`1)
    name: IsLockedOutAsync
    nameWithType: UserManager(Of TUser, TKey).IsLockedOutAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).IsLockedOutAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.SetLockoutEnabledAsync(`1,System.Boolean)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.SetLockoutEnabledAsync(`1,System.Boolean)
  isExternal: true
  name: SetLockoutEnabledAsync(TKey, Boolean)
  nameWithType: UserManager<TUser, TKey>.SetLockoutEnabledAsync(TKey, Boolean)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SetLockoutEnabledAsync(TKey, System.Boolean)
  nameWithType.vb: UserManager(Of TUser, TKey).SetLockoutEnabledAsync(TKey, Boolean)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SetLockoutEnabledAsync(TKey, System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.SetLockoutEnabledAsync(`1,System.Boolean)
    name: SetLockoutEnabledAsync
    nameWithType: UserManager<TUser, TKey>.SetLockoutEnabledAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SetLockoutEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.SetLockoutEnabledAsync(`1,System.Boolean)
    name: SetLockoutEnabledAsync
    nameWithType: UserManager(Of TUser, TKey).SetLockoutEnabledAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SetLockoutEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.GetLockoutEnabledAsync(`1)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.GetLockoutEnabledAsync(`1)
  isExternal: true
  name: GetLockoutEnabledAsync(TKey)
  nameWithType: UserManager<TUser, TKey>.GetLockoutEnabledAsync(TKey)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GetLockoutEnabledAsync(TKey)
  nameWithType.vb: UserManager(Of TUser, TKey).GetLockoutEnabledAsync(TKey)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GetLockoutEnabledAsync(TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetLockoutEnabledAsync(`1)
    name: GetLockoutEnabledAsync
    nameWithType: UserManager<TUser, TKey>.GetLockoutEnabledAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GetLockoutEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetLockoutEnabledAsync(`1)
    name: GetLockoutEnabledAsync
    nameWithType: UserManager(Of TUser, TKey).GetLockoutEnabledAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GetLockoutEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.GetLockoutEndDateAsync(`1)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.GetLockoutEndDateAsync(`1)
  isExternal: true
  name: GetLockoutEndDateAsync(TKey)
  nameWithType: UserManager<TUser, TKey>.GetLockoutEndDateAsync(TKey)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GetLockoutEndDateAsync(TKey)
  nameWithType.vb: UserManager(Of TUser, TKey).GetLockoutEndDateAsync(TKey)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GetLockoutEndDateAsync(TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetLockoutEndDateAsync(`1)
    name: GetLockoutEndDateAsync
    nameWithType: UserManager<TUser, TKey>.GetLockoutEndDateAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GetLockoutEndDateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetLockoutEndDateAsync(`1)
    name: GetLockoutEndDateAsync
    nameWithType: UserManager(Of TUser, TKey).GetLockoutEndDateAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GetLockoutEndDateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.SetLockoutEndDateAsync(`1,System.DateTimeOffset)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.SetLockoutEndDateAsync(`1,System.DateTimeOffset)
  isExternal: true
  name: SetLockoutEndDateAsync(TKey, DateTimeOffset)
  nameWithType: UserManager<TUser, TKey>.SetLockoutEndDateAsync(TKey, DateTimeOffset)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SetLockoutEndDateAsync(TKey, System.DateTimeOffset)
  nameWithType.vb: UserManager(Of TUser, TKey).SetLockoutEndDateAsync(TKey, DateTimeOffset)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SetLockoutEndDateAsync(TKey, System.DateTimeOffset)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.SetLockoutEndDateAsync(`1,System.DateTimeOffset)
    name: SetLockoutEndDateAsync
    nameWithType: UserManager<TUser, TKey>.SetLockoutEndDateAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SetLockoutEndDateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.SetLockoutEndDateAsync(`1,System.DateTimeOffset)
    name: SetLockoutEndDateAsync
    nameWithType: UserManager(Of TUser, TKey).SetLockoutEndDateAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SetLockoutEndDateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.AccessFailedAsync(`1)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.AccessFailedAsync(`1)
  isExternal: true
  name: AccessFailedAsync(TKey)
  nameWithType: UserManager<TUser, TKey>.AccessFailedAsync(TKey)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.AccessFailedAsync(TKey)
  nameWithType.vb: UserManager(Of TUser, TKey).AccessFailedAsync(TKey)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).AccessFailedAsync(TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.AccessFailedAsync(`1)
    name: AccessFailedAsync
    nameWithType: UserManager<TUser, TKey>.AccessFailedAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.AccessFailedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.AccessFailedAsync(`1)
    name: AccessFailedAsync
    nameWithType: UserManager(Of TUser, TKey).AccessFailedAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).AccessFailedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.ResetAccessFailedCountAsync(`1)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.ResetAccessFailedCountAsync(`1)
  isExternal: true
  name: ResetAccessFailedCountAsync(TKey)
  nameWithType: UserManager<TUser, TKey>.ResetAccessFailedCountAsync(TKey)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.ResetAccessFailedCountAsync(TKey)
  nameWithType.vb: UserManager(Of TUser, TKey).ResetAccessFailedCountAsync(TKey)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).ResetAccessFailedCountAsync(TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.ResetAccessFailedCountAsync(`1)
    name: ResetAccessFailedCountAsync
    nameWithType: UserManager<TUser, TKey>.ResetAccessFailedCountAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.ResetAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.ResetAccessFailedCountAsync(`1)
    name: ResetAccessFailedCountAsync
    nameWithType: UserManager(Of TUser, TKey).ResetAccessFailedCountAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).ResetAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.GetAccessFailedCountAsync(`1)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.GetAccessFailedCountAsync(`1)
  isExternal: true
  name: GetAccessFailedCountAsync(TKey)
  nameWithType: UserManager<TUser, TKey>.GetAccessFailedCountAsync(TKey)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GetAccessFailedCountAsync(TKey)
  nameWithType.vb: UserManager(Of TUser, TKey).GetAccessFailedCountAsync(TKey)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GetAccessFailedCountAsync(TKey)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetAccessFailedCountAsync(`1)
    name: GetAccessFailedCountAsync
    nameWithType: UserManager<TUser, TKey>.GetAccessFailedCountAsync
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.GetAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.GetAccessFailedCountAsync(`1)
    name: GetAccessFailedCountAsync
    nameWithType: UserManager(Of TUser, TKey).GetAccessFailedCountAsync
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).GetAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.Dispose(System.Boolean)
  commentId: M:Microsoft.AspNet.Identity.UserManager`2.Dispose(System.Boolean)
  isExternal: true
  name: Dispose(Boolean)
  nameWithType: UserManager<TUser, TKey>.Dispose(Boolean)
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.Dispose(System.Boolean)
  nameWithType.vb: UserManager(Of TUser, TKey).Dispose(Boolean)
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).Dispose(System.Boolean)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.UserManager`2.Dispose(System.Boolean)
    name: Dispose
    nameWithType: UserManager<TUser, TKey>.Dispose
    fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNet.Identity.UserManager`2.Dispose(System.Boolean)
    name: Dispose
    nameWithType: UserManager(Of TUser, TKey).Dispose
    fullName: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.UserManager`2.Store
  commentId: P:Microsoft.AspNet.Identity.UserManager`2.Store
  isExternal: true
  name: Store
  nameWithType: UserManager<TUser, TKey>.Store
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.Store
  nameWithType.vb: UserManager(Of TUser, TKey).Store
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).Store
- uid: Microsoft.AspNet.Identity.UserManager`2.PasswordHasher
  commentId: P:Microsoft.AspNet.Identity.UserManager`2.PasswordHasher
  isExternal: true
  name: PasswordHasher
  nameWithType: UserManager<TUser, TKey>.PasswordHasher
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.PasswordHasher
  nameWithType.vb: UserManager(Of TUser, TKey).PasswordHasher
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).PasswordHasher
- uid: Microsoft.AspNet.Identity.UserManager`2.UserValidator
  commentId: P:Microsoft.AspNet.Identity.UserManager`2.UserValidator
  isExternal: true
  name: UserValidator
  nameWithType: UserManager<TUser, TKey>.UserValidator
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.UserValidator
  nameWithType.vb: UserManager(Of TUser, TKey).UserValidator
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).UserValidator
- uid: Microsoft.AspNet.Identity.UserManager`2.PasswordValidator
  commentId: P:Microsoft.AspNet.Identity.UserManager`2.PasswordValidator
  isExternal: true
  name: PasswordValidator
  nameWithType: UserManager<TUser, TKey>.PasswordValidator
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.PasswordValidator
  nameWithType.vb: UserManager(Of TUser, TKey).PasswordValidator
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).PasswordValidator
- uid: Microsoft.AspNet.Identity.UserManager`2.ClaimsIdentityFactory
  commentId: P:Microsoft.AspNet.Identity.UserManager`2.ClaimsIdentityFactory
  isExternal: true
  name: ClaimsIdentityFactory
  nameWithType: UserManager<TUser, TKey>.ClaimsIdentityFactory
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.ClaimsIdentityFactory
  nameWithType.vb: UserManager(Of TUser, TKey).ClaimsIdentityFactory
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).ClaimsIdentityFactory
- uid: Microsoft.AspNet.Identity.UserManager`2.EmailService
  commentId: P:Microsoft.AspNet.Identity.UserManager`2.EmailService
  isExternal: true
  name: EmailService
  nameWithType: UserManager<TUser, TKey>.EmailService
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.EmailService
  nameWithType.vb: UserManager(Of TUser, TKey).EmailService
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).EmailService
- uid: Microsoft.AspNet.Identity.UserManager`2.SmsService
  commentId: P:Microsoft.AspNet.Identity.UserManager`2.SmsService
  isExternal: true
  name: SmsService
  nameWithType: UserManager<TUser, TKey>.SmsService
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SmsService
  nameWithType.vb: UserManager(Of TUser, TKey).SmsService
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SmsService
- uid: Microsoft.AspNet.Identity.UserManager`2.UserTokenProvider
  commentId: P:Microsoft.AspNet.Identity.UserManager`2.UserTokenProvider
  isExternal: true
  name: UserTokenProvider
  nameWithType: UserManager<TUser, TKey>.UserTokenProvider
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.UserTokenProvider
  nameWithType.vb: UserManager(Of TUser, TKey).UserTokenProvider
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).UserTokenProvider
- uid: Microsoft.AspNet.Identity.UserManager`2.UserLockoutEnabledByDefault
  commentId: P:Microsoft.AspNet.Identity.UserManager`2.UserLockoutEnabledByDefault
  isExternal: true
  name: UserLockoutEnabledByDefault
  nameWithType: UserManager<TUser, TKey>.UserLockoutEnabledByDefault
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.UserLockoutEnabledByDefault
  nameWithType.vb: UserManager(Of TUser, TKey).UserLockoutEnabledByDefault
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).UserLockoutEnabledByDefault
- uid: Microsoft.AspNet.Identity.UserManager`2.MaxFailedAccessAttemptsBeforeLockout
  commentId: P:Microsoft.AspNet.Identity.UserManager`2.MaxFailedAccessAttemptsBeforeLockout
  isExternal: true
  name: MaxFailedAccessAttemptsBeforeLockout
  nameWithType: UserManager<TUser, TKey>.MaxFailedAccessAttemptsBeforeLockout
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.MaxFailedAccessAttemptsBeforeLockout
  nameWithType.vb: UserManager(Of TUser, TKey).MaxFailedAccessAttemptsBeforeLockout
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).MaxFailedAccessAttemptsBeforeLockout
- uid: Microsoft.AspNet.Identity.UserManager`2.DefaultAccountLockoutTimeSpan
  commentId: P:Microsoft.AspNet.Identity.UserManager`2.DefaultAccountLockoutTimeSpan
  isExternal: true
  name: DefaultAccountLockoutTimeSpan
  nameWithType: UserManager<TUser, TKey>.DefaultAccountLockoutTimeSpan
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.DefaultAccountLockoutTimeSpan
  nameWithType.vb: UserManager(Of TUser, TKey).DefaultAccountLockoutTimeSpan
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).DefaultAccountLockoutTimeSpan
- uid: Microsoft.AspNet.Identity.UserManager`2.SupportsUserTwoFactor
  commentId: P:Microsoft.AspNet.Identity.UserManager`2.SupportsUserTwoFactor
  isExternal: true
  name: SupportsUserTwoFactor
  nameWithType: UserManager<TUser, TKey>.SupportsUserTwoFactor
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SupportsUserTwoFactor
  nameWithType.vb: UserManager(Of TUser, TKey).SupportsUserTwoFactor
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SupportsUserTwoFactor
- uid: Microsoft.AspNet.Identity.UserManager`2.SupportsUserPassword
  commentId: P:Microsoft.AspNet.Identity.UserManager`2.SupportsUserPassword
  isExternal: true
  name: SupportsUserPassword
  nameWithType: UserManager<TUser, TKey>.SupportsUserPassword
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SupportsUserPassword
  nameWithType.vb: UserManager(Of TUser, TKey).SupportsUserPassword
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SupportsUserPassword
- uid: Microsoft.AspNet.Identity.UserManager`2.SupportsUserSecurityStamp
  commentId: P:Microsoft.AspNet.Identity.UserManager`2.SupportsUserSecurityStamp
  isExternal: true
  name: SupportsUserSecurityStamp
  nameWithType: UserManager<TUser, TKey>.SupportsUserSecurityStamp
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SupportsUserSecurityStamp
  nameWithType.vb: UserManager(Of TUser, TKey).SupportsUserSecurityStamp
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SupportsUserSecurityStamp
- uid: Microsoft.AspNet.Identity.UserManager`2.SupportsUserRole
  commentId: P:Microsoft.AspNet.Identity.UserManager`2.SupportsUserRole
  isExternal: true
  name: SupportsUserRole
  nameWithType: UserManager<TUser, TKey>.SupportsUserRole
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SupportsUserRole
  nameWithType.vb: UserManager(Of TUser, TKey).SupportsUserRole
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SupportsUserRole
- uid: Microsoft.AspNet.Identity.UserManager`2.SupportsUserLogin
  commentId: P:Microsoft.AspNet.Identity.UserManager`2.SupportsUserLogin
  isExternal: true
  name: SupportsUserLogin
  nameWithType: UserManager<TUser, TKey>.SupportsUserLogin
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SupportsUserLogin
  nameWithType.vb: UserManager(Of TUser, TKey).SupportsUserLogin
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SupportsUserLogin
- uid: Microsoft.AspNet.Identity.UserManager`2.SupportsUserEmail
  commentId: P:Microsoft.AspNet.Identity.UserManager`2.SupportsUserEmail
  isExternal: true
  name: SupportsUserEmail
  nameWithType: UserManager<TUser, TKey>.SupportsUserEmail
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SupportsUserEmail
  nameWithType.vb: UserManager(Of TUser, TKey).SupportsUserEmail
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SupportsUserEmail
- uid: Microsoft.AspNet.Identity.UserManager`2.SupportsUserPhoneNumber
  commentId: P:Microsoft.AspNet.Identity.UserManager`2.SupportsUserPhoneNumber
  isExternal: true
  name: SupportsUserPhoneNumber
  nameWithType: UserManager<TUser, TKey>.SupportsUserPhoneNumber
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SupportsUserPhoneNumber
  nameWithType.vb: UserManager(Of TUser, TKey).SupportsUserPhoneNumber
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SupportsUserPhoneNumber
- uid: Microsoft.AspNet.Identity.UserManager`2.SupportsUserClaim
  commentId: P:Microsoft.AspNet.Identity.UserManager`2.SupportsUserClaim
  isExternal: true
  name: SupportsUserClaim
  nameWithType: UserManager<TUser, TKey>.SupportsUserClaim
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SupportsUserClaim
  nameWithType.vb: UserManager(Of TUser, TKey).SupportsUserClaim
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SupportsUserClaim
- uid: Microsoft.AspNet.Identity.UserManager`2.SupportsUserLockout
  commentId: P:Microsoft.AspNet.Identity.UserManager`2.SupportsUserLockout
  isExternal: true
  name: SupportsUserLockout
  nameWithType: UserManager<TUser, TKey>.SupportsUserLockout
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SupportsUserLockout
  nameWithType.vb: UserManager(Of TUser, TKey).SupportsUserLockout
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SupportsUserLockout
- uid: Microsoft.AspNet.Identity.UserManager`2.SupportsQueryableUsers
  commentId: P:Microsoft.AspNet.Identity.UserManager`2.SupportsQueryableUsers
  isExternal: true
  name: SupportsQueryableUsers
  nameWithType: UserManager<TUser, TKey>.SupportsQueryableUsers
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.SupportsQueryableUsers
  nameWithType.vb: UserManager(Of TUser, TKey).SupportsQueryableUsers
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).SupportsQueryableUsers
- uid: Microsoft.AspNet.Identity.UserManager`2.Users
  commentId: P:Microsoft.AspNet.Identity.UserManager`2.Users
  isExternal: true
  name: Users
  nameWithType: UserManager<TUser, TKey>.Users
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.Users
  nameWithType.vb: UserManager(Of TUser, TKey).Users
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).Users
- uid: Microsoft.AspNet.Identity.UserManager`2.TwoFactorProviders
  commentId: P:Microsoft.AspNet.Identity.UserManager`2.TwoFactorProviders
  isExternal: true
  name: TwoFactorProviders
  nameWithType: UserManager<TUser, TKey>.TwoFactorProviders
  fullName: Microsoft.AspNet.Identity.UserManager<TUser, TKey>.TwoFactorProviders
  nameWithType.vb: UserManager(Of TUser, TKey).TwoFactorProviders
  fullName.vb: Microsoft.AspNet.Identity.UserManager(Of TUser, TKey).TwoFactorProviders
- uid: assignment_2_task_6.ApplicationUserManager.#ctor*
  commentId: Overload:assignment_2_task_6.ApplicationUserManager.#ctor
  name: ApplicationUserManager
  nameWithType: ApplicationUserManager.ApplicationUserManager
  fullName: assignment_2_task_6.ApplicationUserManager.ApplicationUserManager
- uid: Microsoft.AspNet.Identity.IUserStore{assignment_2_task_6.Models.ApplicationUser}
  commentId: T:Microsoft.AspNet.Identity.IUserStore{assignment_2_task_6.Models.ApplicationUser}
  parent: Microsoft.AspNet.Identity
  definition: Microsoft.AspNet.Identity.IUserStore`1
  name: IUserStore<ApplicationUser>
  nameWithType: IUserStore<ApplicationUser>
  fullName: Microsoft.AspNet.Identity.IUserStore<assignment_2_task_6.Models.ApplicationUser>
  nameWithType.vb: IUserStore(Of ApplicationUser)
  fullName.vb: Microsoft.AspNet.Identity.IUserStore(Of assignment_2_task_6.Models.ApplicationUser)
  name.vb: IUserStore(Of ApplicationUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.IUserStore`1
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNet.Identity.IUserStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: assignment_2_task_6.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: assignment_2_task_6.Models.ApplicationUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.IUserStore`1
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNet.Identity.IUserStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: assignment_2_task_6.Models.ApplicationUser
    name: ApplicationUser
    nameWithType: ApplicationUser
    fullName: assignment_2_task_6.Models.ApplicationUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.IUserStore`1
  commentId: T:Microsoft.AspNet.Identity.IUserStore`1
  isExternal: true
  name: IUserStore<TUser>
  nameWithType: IUserStore<TUser>
  fullName: Microsoft.AspNet.Identity.IUserStore<TUser>
  nameWithType.vb: IUserStore(Of TUser)
  fullName.vb: Microsoft.AspNet.Identity.IUserStore(Of TUser)
  name.vb: IUserStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.IUserStore`1
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNet.Identity.IUserStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.IUserStore`1
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNet.Identity.IUserStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: assignment_2_task_6.ApplicationUserManager.Create*
  commentId: Overload:assignment_2_task_6.ApplicationUserManager.Create
  name: Create
  nameWithType: ApplicationUserManager.Create
  fullName: assignment_2_task_6.ApplicationUserManager.Create
- uid: Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions{assignment_2_task_6.ApplicationUserManager}
  commentId: T:Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions{assignment_2_task_6.ApplicationUserManager}
  parent: Microsoft.AspNet.Identity.Owin
  definition: Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions`1
  name: IdentityFactoryOptions<ApplicationUserManager>
  nameWithType: IdentityFactoryOptions<ApplicationUserManager>
  fullName: Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions<assignment_2_task_6.ApplicationUserManager>
  nameWithType.vb: IdentityFactoryOptions(Of ApplicationUserManager)
  fullName.vb: Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions(Of assignment_2_task_6.ApplicationUserManager)
  name.vb: IdentityFactoryOptions(Of ApplicationUserManager)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions`1
    name: IdentityFactoryOptions
    nameWithType: IdentityFactoryOptions
    fullName: Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: assignment_2_task_6.ApplicationUserManager
    name: ApplicationUserManager
    nameWithType: ApplicationUserManager
    fullName: assignment_2_task_6.ApplicationUserManager
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions`1
    name: IdentityFactoryOptions
    nameWithType: IdentityFactoryOptions
    fullName: Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: assignment_2_task_6.ApplicationUserManager
    name: ApplicationUserManager
    nameWithType: ApplicationUserManager
    fullName: assignment_2_task_6.ApplicationUserManager
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Owin.IOwinContext
  commentId: T:Microsoft.Owin.IOwinContext
  parent: Microsoft.Owin
  isExternal: true
  name: IOwinContext
  nameWithType: IOwinContext
  fullName: Microsoft.Owin.IOwinContext
- uid: assignment_2_task_6.ApplicationUserManager
  commentId: T:assignment_2_task_6.ApplicationUserManager
  parent: assignment_2_task_6
  name: ApplicationUserManager
  nameWithType: ApplicationUserManager
  fullName: assignment_2_task_6.ApplicationUserManager
- uid: Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions`1
  commentId: T:Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions`1
  isExternal: true
  name: IdentityFactoryOptions<T>
  nameWithType: IdentityFactoryOptions<T>
  fullName: Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions<T>
  nameWithType.vb: IdentityFactoryOptions(Of T)
  fullName.vb: Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions(Of T)
  name.vb: IdentityFactoryOptions(Of T)
  spec.csharp:
  - uid: Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions`1
    name: IdentityFactoryOptions
    nameWithType: IdentityFactoryOptions
    fullName: Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions`1
    name: IdentityFactoryOptions
    nameWithType: IdentityFactoryOptions
    fullName: Microsoft.AspNet.Identity.Owin.IdentityFactoryOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNet.Identity.Owin
  commentId: N:Microsoft.AspNet.Identity.Owin
  isExternal: true
  name: Microsoft.AspNet.Identity.Owin
  nameWithType: Microsoft.AspNet.Identity.Owin
  fullName: Microsoft.AspNet.Identity.Owin
- uid: Microsoft.Owin
  commentId: N:Microsoft.Owin
  isExternal: true
  name: Microsoft.Owin
  nameWithType: Microsoft.Owin
  fullName: Microsoft.Owin
